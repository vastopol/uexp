.\" generated by $Id: snopea.sno,v 1.33 2015/01/02 03:31:20 phil Exp $
.if n .ad l
.ie '\*[.T]'ascii' \{\
.	ds lq \&"\"
.	ds rq \&"\"
.	ds pi \fIpi\fP
.\}
.el \{\
.	ds rq ''
.	ds lq ``
.	ds pi \[*p]
.\}
.nh
.TH SNOBOL4FFI 3 "January 1, 2015" "CSNOBOL4B 2.0" "CSNOBOL4 Manual"
.SH "NAME"
.nh
snobol4ffi \- Foreign Function Interface for SNOBOL4
.SH "SYNOPSYS"
.nh
.ft CW
.br
.ne 10
.RS 4
.nh
.nf
-INCLUDE 'ffi.sno'
        dl = FFI_DLOPEN("/usr/lib/libm.so")
        sym = FFI_DLSYM(dl, "hypot")
        DEFINE_FFI("hypot(double,double)double", sym)
        OUTPUT = hypot(3, 4)
.ft R
.fi
.nh
.RE
.SH "DESCRIPTION"
.nh
.TP 4
\fBFFI_DLOPEN(\fP\fIfilename\fP\fB)\fP
takes the path of a dynamicly loadable
executable file and returns a value
which can be passed to \fBFFI_DLSYM()\fP.
.TP 4
\fBFFI_DLSYM(\fP\fIlibrary\fP,\fIfunction\fP\fB)\fP
takes a \fIlibrary\fP value
returned by \fBFFI_DLOPEN()\fP, and a function name, and returns a
value which can be passed to \fBDEFINE_FFI()\fP.
.TP 4
\fBDEFINE_FFI(\fP\fIprototype\fP,\fIpointer\fP\fB)\fP
defines a SNOBOL4 function that calls an external function via \fBffi\fP(3).
\fIprototype\fP contains a string name for the function followed
by a comma separated list of parameter types inside of parenthesis
(any of:
\fBsint8\fP, \fBsint16\fP, \fBsint32\fP, \fBsint64\fP,
\fBuint8\fP, \fBuint16\fP, \fBuint32\fP, \fBuint64\fP,
\fBschar\fP, \fBsshort\fP, \fBsint\fP, \fBslong\fP,
\fBuchar\fP, \fBushort\fP, \fBuint\fP, \fBulong\fP,
\fBfloat\fP, \fBdouble\fP, \fBlongdouble\fP, \fBpointer\fP),
followed by a return type, which can be
any of the above parameter types, or
\fBvoid\fP, \fBstring\fP, \fBfreestring\fP.
\fIpointer\fP is a value returned by \fBFFI_DLSYM()\fP.
.SH "SEE ALSO"
.nh
\fBsnobol4\fP(1), \fBffi\fP(3), \fBdlopen\fP(3)
.SH "AUTHOR"
.nh
Philip L. Budne
