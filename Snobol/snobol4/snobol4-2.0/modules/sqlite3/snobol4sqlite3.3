.\" generated by $Id: snopea.sno,v 1.33 2015/01/02 03:31:20 phil Exp $
.if n .ad l
.ie '\*[.T]'ascii' \{\
.	ds lq \&"\"
.	ds rq \&"\"
.	ds pi \fIpi\fP
.\}
.el \{\
.	ds rq ''
.	ds lq ``
.	ds pi \[*p]
.\}
.nh
.TH SNOBOL4SQLITE3 3 "January 1, 2015" "CSNOBOL4B 2.0" "CSNOBOL4 Manual"
.SH "NAME"
.nh
snobol4sqlite3 \- SQLITE3 interface for SNOBOL4
.SH "SYNOPSYS"
.nh
\fB-INCLUDE 'sqlite3.sno'\fP
.SH "DESCRIPTION"
.nh
.TP 4
\fBSQLITE3_OPEN(\fP\fIpath\fP\fB)\fP
opens a database and returns a database handle or failure.
.TP 4
\fBSQLITE3_CLOSE(\fP\fIdb_handle\fP\fB)\fP
closes database and returns empty string or failure.
.TP 4
\fBSQLITE3_ERRMSG(\fP\fIdb_handle\fP\fB)\fP
Returns an SQLITE3 error string or failure if the handle is invalid.
.TP 4
\fBSQLITE3_LAST_INSERT_ROWID(\fP\fIdb_handle\fP\fB)\fP
Returns an integer or failure if the handle is invalid.
.TP 4
\fBSQLITE3_PREPARE(\fP\fIdb_handle\fP,\fISQL\fP[,\fIparams ...\fP]\fB)\fP
Parses an SQL statement and optionally binds positional parameters to it.
Call \fBSQLITE3_ROW_ARRAY()\fP or \fBSQLITE3_ROW_TABLE()\fP to fetch a row of results
once all parameters have been bound.
Returns a statement handle or failure.
.TP 4
\fBSQLITE3_BIND_ANY(\fP\fIst_handle\fP, \fIposition\fP, \fIvalue\fP\fB)\fP
Binds \fIvalue\fP at (one-based) \fIposition\fP to a prepared SQL statement.
Returns null string or failure.
.TP 4
\fBSQLITE3_BIND_BLOB(\fP\fIst_handle\fP, \fIposition\fP, \fIvalue\fP\fB)\fP
Binds \fIvalue\fP to (one-based) \fIposition\fP as a BLOB value to prepared SQL statement.
Returns null string or failure.
.TP 4
\fBSQLITE3_BIND_MANY(\fP\fIst_handle\fP, \fIvalues ...\fP\fB)\fP
Binds multiple positional parameter \fIvalues\fP to a prepared SQL statement.
Returns null string or failure.
.TP 4
\fBSQLITE3_BIND_PARAMETER_COUNT(\fP\fIst_handle\fP\fB)\fP
Returns the number of parameters required by a prepared SQL statement, or fails.
.TP 4
\fBSQLITE3_BIND_PARAMETER_NAME(\fP\fIst_handle\fP, \fIposition\fP\fB)\fP
Returns the name (if any) for the parameter \fIposition\fP number in
a prepared SQL statement.
.TP 4
\fBSQLITE3_BIND_PARAMETER_INDEX(\fP\fIst_handle\fP, \fIname\fP\fB)\fP
Returns the positional index for named parameter \fIname\fP in
prepared SQL statement.
.TP 4
\fBSQLITE3_CLEAR_BINDINGS(\fP\fIst_handle\fP\fB)\fP
Use this routine to reset all parameter bindings to NULL.
.TP 4
\fBSQLITE3_RESET(\fP\fIst_handle\fP\fB)\fP
Reset a prepared statement back to its initial state, ready to be
re-executed. Any SQL statement variables that had values bound to
them retain their values. Use \fBsqlite3_clear_bindings()\fP
to reset the bindings.
.TP 4
\fBSQLITE3_FINALIZE(\fP\fIst_handle\fP\fB)\fP
Release (delete) a statement handle.
.TP 4
\fBSQLITE3_EXEC(\fP\fIdb_handle\fP,\fISQL statement(s)\fP\fB)\fP
Run one or more SQL statements that do not require parameters.
.TP 4
\fBSQLITE3_ROW_ARRAY(\fP\fIst_handle\fP\fB)\fP
Returns an \fBARRAY\fP with a row of statement results or fails.
.TP 4
\fBSQLITE3_COLUMN_NAMES_ARRAY(\fP\fIst_handle\fP\fB)\fP
Returns an \fBARRAY\fP with SQL statement result column names or fails.
.TP 4
\fBSQLITE3_ROW_TABLE(\fP\fIst_handle\fP\fB)\fP
Returns a \fBTABLE\fP with statement results indexed by column name or fails.
.SH "SEE ALSO"
.nh
\fBsnobol4\fP(1)
.br
http://www.sqlite.org
.br
http://www.sqlite.org/c3ref/funclist.html
