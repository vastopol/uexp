.\" generated by $Id: snopea.sno,v 1.33 2015/01/02 03:31:20 phil Exp $
.if n .ad l
.ie '\*[.T]'ascii' \{\
.	ds lq \&"\"
.	ds rq \&"\"
.	ds pi \fIpi\fP
.\}
.el \{\
.	ds rq ''
.	ds lq ``
.	ds pi \[*p]
.\}
.nh
.TH SDB 1 "January 1, 2015" "CSNOBOL4B 2.0" "CSNOBOL4 Manual"
.SH "NAME"
.nh
sdb \- SNOBOL4 debugger
.SH "SYNOPSIS"
.nh
\fBsdb\fP [ \fIoptions\fP .\|.\|. ] \fIprogram.sno\fP
.SH "DESCRIPTION"
.nh
\fBsdb\fP is a debugger for \fBsnobol4\fP(1) programs, in the mold (clawning
fone) of \fBgdb\fP(1), The GNU debugger.  \fBsdb\fP(1) uses \fBreadline\fP(3)
for command line editing/history when available.
.SS "Commands"
.nh
.TP 4
\fBbreak\fP \fILABEL_OR_STATEMENT_NUMBER\fP
Set a breakpoint.
.TP 4
\fBbt\fP
Display call stack \fIback trace\fP.
.TP 4
\fBcommands\fP \fIBREAKPOINT_NUMBER\fP
Add sdb commands to execute (ie; print & continue) to a breakpoint.
.TP 4
\fBcondition\fP \fIBREAKPOINT_NUMBER\fP [ \fIEXPR\fP ]
If \fIEXPR\fP is supplied, it is used as a predicate to make the
breakpoint conditional, if no \fIEXPR\fP is supplied, any previous condition
is removed.
.TP 4
\fBcontinue\fP [ \fICOUNT\fP ]
Continue from breakpoint.  The optional count specifies how many times
to continue past this breakpoint (sets \fBignore\fP count).
.TP 4
\fBdelete\fP [ \fIBREAKPOINT_NUMBER\fP ]
Delete a single breakpoint, or all breakpoints.
.TP 4
\fBdisable\fP [ \fIBREAKPOINT_NUMBER\fP ]
Temporarily disable a breakpoint, or all breakpoints.
.TP 4
\fBenable\fP [ \fIBREAKPOINT_NUMBER\fP ]
Re-enable a breakpoint, or all breakpoints.
.TP 4
\fBfinish\fP
Resume debugging after current function returns.
Will display function return type and value, if any.
.TP 4
\fBhelp\fP
Display help.
.TP 4
\fBignore\fP \fIBREAKPOINT_NUMBER\fP [ \fICOUNT\fP ]
Set (or clear) breakpoint ignore count.
.TP 4
\fBinfo\fP
Display list of breakpoints and their status.
.TP 4
\fBlist\fP [ \fISTATEMENT_NUMBER\fP ]
Display source code.
.TP 4
\fBnext\fP [ \fICOUNT\fP ]
Single step execution, skipping over function calls.
.TP 4
\fBprint\fP \fIEXPRESSION\fP
Evaluate expression and print result.  Can be used to call functions,
or set variables.
.TP 4
\fBquit\fP
Exit debugger.
.TP 4
\fBstep\fP [ \fICOUNT\fP ]
Single step.
.TP 4
\fBwatch\fP \fIVARIABLE\fP
Set watchpoint on a variable (break when value changes).
.TP 4
\fBwhat\fP
Display the datatype of variable contents (or expression).
.TP 4
\fBwhere\fP
An alias for \fBbt\fP.
.PP
A blank line repeats the previous command.
.PP
Non-ambiguous abbreviations of commands can be used (ie; \fBs\fP, \fBn\fP).
.PP
The GNU Readline library (when available) will be used for \fBsdb\fP(1)
input for command editing and history.
.PP
The keyboard interrupt character (eg; Control-C) will stop a running
program and return control to the \fBsdb\fP(1) command prompt.
.PP
If your program calls the \fBSDB()\fP function, it will act as a
breakpoint.  You can check whether \fBsdb\fP(1) is loaded with the
\fBFUNCTION()\fP predicate, ie;
.ft CW
.br
.ne 10
.RS 4
.nh
.nf
.PP
        FUNCTION('SDB') SDB()
.ft R
.fi
.nh
.RE
.SH "SEE ALSO"
.nh
\fBsnobol4\fP(1), \fBgdb\fP(1), \fBreadline\fP(3), \fBsnobol4readline\fP(3)
.SH "AUTHOR"
.nh
Philip L. Budne
.PP
Inspired by Fred Weigel's DDT.SNO and \fBSITBOL\fP's SNODDT.
.SH "LIMITATIONS"
.nh
\fBsdb\fP(1) uses a wide variety of system facilities and will interact
poorly with any programs that use any number of features, including:
.IP \(bu
Altering listing settings with directive/control lines.
.IP \(bu
Altering \fB&STLIMIT\fP, \fB&ERRLIMIT\fP, or \fB&TRACE\fP.
.IP \(bu
Calling \fBSETEXIT()\fP
.SH "BUGS"
.nh
If you try to put a breakpoint on a label or line with no code or goto
fields, the breakpoint will never be triggered.
.PP
You cannot put a breakpoint on the \fBEND\fP label (however control
always returns to sdb when the \fBEND\fP label is reached).
.PP
There is no \*(lqrun\*(rq command; you cannot restart the program without
quitting and losing breakpoint settings.
.PP
Interrupt character trapping is in it's infancy, and only occurs at
the start of a each statement executed.
.PP
The interrupt character is silently ignored when at the \fBsdb\fP command
prompt.
.PP
\fBsdb\fP does not read an init file (ie; .sdbinit).
