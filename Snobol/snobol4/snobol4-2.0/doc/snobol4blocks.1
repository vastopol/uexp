.\" generated by $Id: snopea.sno,v 1.33 2015/01/02 03:31:20 phil Exp $
.if n .ad l
.ie '\*[.T]'ascii' \{\
.	ds lq \&"\"
.	ds rq \&"\"
.	ds pi \fIpi\fP
.\}
.el \{\
.	ds rq ''
.	ds lq ``
.	ds pi \[*p]
.\}
.nh
.TH SNOBOL4BLOCKS 1 "January 1, 2015" "CSNOBOL4B 2.0" "CSNOBOL4 Manual"
.SH "NAME"
.nh
snobol4blocks \- SNOBOL4 BLOCKS extension
.SH "DESCRIPTION"
.nh
The BLOCKS extension was developed by Jim Gimpel while at Bell Labs.
A BLOCK is a data type that extends string concatenation to three dimensions.
.PP
Enabling the BLOCKS extension with the \fB-BLOCKS\fP control line (see
\fBsnobol4ctrl\fP(1)) or the \fB-B\fP command line option (see
\fBsnobol4cmd\fP(1)) alters the definition and precedence of percent and
pound (see \fBsnobol4op\fP(1)):
.PP
White space concatenates two BLOCKs in the horizontal dimension,
the percent sign (\fB%\fP) concatenates two BLOCKs in the vertical dimension,
and the pound sign (\fB#\fP) concatenates two BLOCKs in the dimension
\*(lqnormal\*(rq to the paper (over-strike).
.PP
The functions defined below are always present when CSNOBOL4 has been
built with blocks enabled.
.SS "Functions"
.nh
For \fIdir\fP arguments: \fB0\fP=\*(lqvertical\*(rq, \fB1\fP=\*(lqhorizontal\*(rq, \fB2\fP=\*(lqnormal\*(rq
.TP 4
\fBBCHAR(\fP\fIb\fP\fB)\fP
Returns character representation of BLOCK \fIb\fP as an ARRAY of strings,
dimensioned \fId\fP x \fIh\fP, where \fId\fP is the depth of the block and \fIh\fP
is the height of the block (renamed from \fBCHAR\fP).
.TP 4
\fBBOX(\fP\fIh,w,d\fP\fB)\fP
Returns a BLOCK of fill characters of height \fIh\fP, width \fIw\fP and depth \fId\fP.
.TP 4
\fBBLOCKSIZE(\fP\fIb,dir\fP\fB)\fP
Return INTEGER size of block \fIb\fP in direction \fIdir\fP.
.TP 4
\fBCC(\fP\fIunit\fP\fB)\fP
Accessor function to change carriage control on I/O unit \fIunit\fP.
If value is positive ASA (FORTRAN style) carriage control is output in
column one (the \fBasa2pdf\fP program converts ASA format to PDF).
If value is zero, no carriage control is output.
If value is negative, ASCII carriage control characters are output
(\fBCSNOBOL4\fP extension).
.TP 4
\fBDEF(\fP\fIb\fP\fB)\fP
Returns a BLOCK whose organization is \fIdeferred\fP.
.TP 4
\fBDEPTH(\fP\fIb\fP\fB)\fP
Returns INTEGER depth of BLOCK \fIb\fP.
.TP 4
\fBDUP(\fP\fIb,dir,n\fP\fB)\fP
Duplicate BLOCK \fIb\fP \fIn\fP times in direction \fIdir\fP.
.TP 4
\fBEJECT(\fP[\fIi,...\fP]\fB)\fP
Eject a page and return the null string.
Optional unit numbers may be given to \*(lqbroadcast\*(rq the form feed.
.TP 4
\fBFIX(\fP\fIb\fP\fB)\fP
Returns a block whose organization is \fIphysical\fP -- all positioning is
done at this time, and no information on how the block was formed is
retained.
.TP 4
\fBFRONT(\fP\fIh,w\fP\fB)\fP
A special case of \fBBOX()\fP.
Returns a BLOCK of fill characters of height \fIh\fP and width \fIw\fP and of depth zero.
.TP 4
\fBHEIGHT(\fP\fIb\fP\fB)\fP
Returns INTEGER height of BLOCK \fIb\fP.
.TP 4
\fBHOR(\fP\fIn\fP\fB)\fP
A special case of \fBBOX()\fP.
Returns a block of fill characters whose width in \fIn\fP
and height and depth zero.
.TP 4
\fBHOR_REG(\fP\fIb\fP\fB)\fP
Accessor which returns or sets the horizontal registration of BLOCK \fIb\fP.
Values: \fB'RIGHT'\fP, \fB'RIGHT'\fP, \fB\'\'\fP (centered).
.TP 4
\fBIT(\fP\fIb\fP\fB)\fP
Returns a block whose organization is \fIiterated\fP orthogonally to parent.
.TP 4
\fBLOC(\fP\fIn,b,dir\fP\fB)\fP
Returns the location of NODE \fIn\fP in BLOCK \fIb\fP in direction \fIdir\fP.
.TP 4
\fBLRECL(\fP\fIunit\fP\fB)\fP
Undocumented!! Accessor for I/O unit record length???
.TP 4
\fBMERGE(\fP\fIb1,b2,....\fP\fB)\fP
Returns a BLOCK whose organization is \fImerged\fP.
.TP 4
\fBNODE(\fP\fIb\fP\fB)\fP
Returns a BLOCK whose organization is \fIdeferred\fP.
.TP 4
\fBNORM_REG(\fP\fIb\fP\fB)\fP
Accessor which returns or sets the normal plane registration of BLOCK \fIb\fP.
Values: \fB'FRONT'\fP, \fB'REAR'\fP, \fB\'\'\fP (centered).
.TP 4
\fBOVY(\fP\fIb1\fP,\fIb2\fP\fB)\fP
\*(lqOverlay\*(rq -- concatenation in the \*(lqnormal\*(rq plane.
.TP 4
\fBPRINT(\fP\fIb\fP,[\fIi1,....\fP]\fB)\fP
Prints block to I/O unit 5.
Additional unit numbers may be given to \*(lqbroadcast\*(rq BLOCK \fIb\fP.
.TP 4
\fBREP(\fP\fIb\fP\fB)\fP
Returns a BLOCK whose organization is \fIreplicated\fP.
.TP 4
\fBSER(\fP\fIb1\fP,\fIb2\fP\fB)\fP
\*(lqSerial?\*(rq -- concatenation in the vertical plane.
.TP 4
\fBSLAB(\fP\fIb,dir,offset,length\fP\fB)\fP
Returns a physical block which is a cross-sectional cut of \fIb\fP,
in direction \fIdir\fP
.TP 4
\fBVER(\fP\fIn\fP\fB)\fP
A special case of \fBBOX()\fP.
Returns a BLOCK of fill characters whose height is \fIn\fP.
.TP 4
\fBVER_REG(\fP\fIb\fP\fB)\fP
Accessor which returns or sets the vertical registration of BLOCK \fIb\fP.
Values: \fB'TOP'\fP, \fB'BOTTOM'\fP, \fB\'\'\fP (centered).
.TP 4
\fBWIDTH(\fP\fIb\fP\fB)\fP
Returns INTEGER width of BLOCK \fIb\fP.
.SS "Keywords"
.nh
.TP 4
\fB&FILL\fP
The fill character (defaults to space).
.SH "SEE ALSO"
.nh
\fBsnobol4\fP(1)
.PP
\fIBlocks a new datatype for SNOBOL4\fP,
James F. Gimpel,
\fICommunications of the ACM\fP,
Volume 15 Issue 6, June 1972,
Pages 438-447
.TP 4
http://deepblue.lib.umich.edu/bitstream/handle/2027.42/79574/MTSVol09-SNOBOLInMTS-May1984.pdf
Contains a manual for the BLOCKS extension.
.TP 4
http://home.comcast.net/~urbanjost/LIBRARY/EXE/ASA/html/asa2pdf_doc.html
A utility to convert \*(lqASA carriage control\*(rq into \fBPDF\fP, complete with green
stripes.
.PP
http://www.snobol4.org/blocks/
