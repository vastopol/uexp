.\" generated by $Id: snopea.sno,v 1.33 2015/01/02 03:31:20 phil Exp $
.if n .ad l
.ie '\*[.T]'ascii' \{\
.	ds lq \&"\"
.	ds rq \&"\"
.	ds pi \fIpi\fP
.\}
.el \{\
.	ds rq ''
.	ds lq ``
.	ds pi \[*p]
.\}
.nh
.TH SNOBOL4IO 1 "January 1, 2015" "CSNOBOL4B 2.0" "CSNOBOL4 Manual"
.SH "NAME"
.nh
snobol4io \- SNOBOL4 file I/O
.SH "DESCRIPTION"
.nh
Macro SNOBOL4 originally depended on \fBFORTRAN\fP libraries, unit
numbers and \fBFORMAT\fPs for input and output.  CSNOBOL4 uses the C
\fBstdio\fP(3) library instead, but unit numbers (INTEGERs between 1 and
256) and record lengths remain embedded in the Macro SNOBOL4 code.
.SS "I/O Associations"
.nh
Output on a closed unit generates a fatal \*(lqOutput error\*(rq,
see \fBsnobol4error\fP(1).
.PP
The following variable/unit/file associations exist by default;
.PP
.ta 1i 2i
.nf
Variable	Unit	Association
\fBINPUT\fP	5	standard input (input)
\fBOUTPUT\fP	6	standard output (output)
\fBTERMINAL\fP	7	standard error (output)
\fBTERMINAL\fP	8	/dev/tty (input)
.fi
.SS "Named files"
.nh
Input and output filenames can be supplied to the \fBINPUT()\fP and
\fBOUTPUT()\fP functions via an optional fourth argument.
.TP 4
filename - (hyphen)
is interpreted as stdin on \fBINPUT()\fP and stdout on \fBOUTPUT()\fP.
.TP 4
sub-process I/O using PIPE and Pseudo-terminals
If the filename begins with single a vertical bar (\fB|\fP),
the remainder is used
as a shell command whose stdin (in the case of \fBOUTPUT()\fP) or stdout
(in the case of \fBINPUT()\fP) will be connected to the file variable via
a pipe.  If a pipe is opened by INPUT() input in \*(lqupdate\*(rq mode, the
connection will be bi-directional (on systems with socketpair and
Unix-domain sockets).  See below for how to associate a variable for
I/O in both directions.
.IP
If the filename begins with two vertical bars (\fB||\fP) the remainder is
used as a shell command executed with stdin, stdout and stderr
attached to the slave side of a pseudo-terminal (pty), if the system C
library contains the \fBforkpty\fP(3) routine.  Use of ptys are necessary
when the program to be invoked cannot be run without a "terminal" for
I/O.  See below on how to properly associate the I/O variable.
.TP 4
magic paths \fB/dev/stdin\fP, \fB/dev/stdout\fP, and \fB/dev/stderr\fP
\fB/dev/stdin\fP, \fB/dev/stdout\fP, and \fB/dev/stderr\fP refer to the current
process standard input, standard output and standard error I/O streams
respectively \fIregardless\fP of whether those special filenames exist on
your system.
.TP 4
magic path \fB/dev/fd/\fP\fIn\fP
\fB/dev/fd/\fP\fIn\fP uses \fBfdopen\fP(3) to open a new I/O stream associated
with file descriptor number \fIn\fP, regardless of whether the special
device entries exist.
.TP 4
magic paths \fB/tcp/\fP\fIhostname\fP/\fIservice\fP and  \fB/udp/\fP\fIhostname\fP/\fIservice\fP
\fB/tcp/\fP\fIhostname\fP/\fIservice\fP can be used to open connection to a TCP
server. If the path ends in the optional suffix \fB/priv\fP the local
address will be bound to a port number below 1024, if process
privileges allow.  \fB/udp/\fP\fIhostname\fP/\fIservice\fP behaves similarly
for UDP.
.TP 4
magic pathname \fB/dev/tmpfile\fP
\fB/dev/tmpfile\fP opens an anonymous temporary file for reading and writing, see
\fBtmpfile\fP(3).
.TP 4
\fB/dev/null\fP and \fB/dev/tty\fP
On non-POSIX systems \fB/dev/null\fP and \fB/dev/tty\fP are magical, and
refer to the null device, and the user's terminal/console,
respectively.
.SS "I/O Options"
.nh
Originally the third argument specified record length for \fBINPUT()\fP,
or a \fBFORTRAN\fP \fBFORMAT\fP for \fBOUTPUT()\fP.
.PP
CSNOBOL4 interprets it as string of single letter options, commas are ignored.
Some options effect only the I/O variable named in the first argument,
others effect any variable associated with the unit number in the
second argument.
.TP 4
\fIdigits\fP
A span of digits will set the input record length for the named I/O
variable.  This controls the maximum string that will be returned for
regular text I/O, and the number of bytes returned for binary I/O.
Record length is per-variable association; multiple variables may be
associated with the same unit, but with different record lengths.  The
default record length for input is 1024. Lines longer than the record
length will be silently truncated.
.TP 4
\fBA\fP
For \fBOUTPUT()\fP the unit will be opened for append access (and ignored by
\fBINPUT()\fP).  All writes will occur at the end of the file at the time
of the write, regardless of the file position before the write.
.TP 4
\fBB\fP
The unit will be opened for binary access.  On input, newline
characters have no special meaning; the number of bytes transferred
depends on record length (see above). On output, no newline is
appended.
.IP
For terminal devices, all input from this unit will be done without
special processing for line editing or EOF; the number of characters
returned depends on the record length.
Characters which deliver signals (including interrupt, kill, and suspend)
are still processed.  Units (with different fds) opened on the same terminal
device operate independently; some can use binary mode, while others
operate in text mode.
.TP 4
\fBC\fP
Character at a time I/O.  A synonym for \fBB,1\fP.
.TP 4
\fBT\fP
Terminal mode.  Writes are performed \*(lqunbuffered\*(rq (see below), and
no newline characters are added. On input newline characters are
returned.  Terminal mode effects only the referenced unit, and does
not require opening a new file descriptor (ie; by using a magic
pathname): \fBOUTPUT(.TT, 8, "T", "-")\fP.  Terminal mode is useful for
outputting prompts in interactive programs.
.TP 4
\fBQ\fP
Quiet mode.  Turns off input echo on terminals.
Effects only input on this file descriptor.
.TP 4
\fBU\fP
Update mode.  The unit is opened for both input and output.
Example of associating a variable for I/O in both directions:
.ft CW
.br
.ne 10
.RS 4
.nh
.nf
        unit = IO_FINDUNIT()
        INPUT(.name, unit, 'U', 'filepath')
        OUTPUT(.name, unit)
.ft R
.fi
.nh
.RE
.IP
Useful situations for this when filepath is \fB/dev/fd/\fP\fIn\fP where \fIn\fP
is a file descriptor number returned by \fBSERV_LISTEN(),\fP or
\f(CWfilepath\fP specifies a pipe (\fB|command\fP) or pseudo-terminal
(\fB||command\fP) paths.
.IP
The above sequence is also useful with when combined with fixed record
length, binary mode and the \fBSET()\fP function for I/O to preexisting
files.  Performing \fBOUTPUT()\fP first will create a regular file if it
does not exist, but will also truncate a preexisting file!
.TP 4
\fBW\fP
Unbuffered mode.  Each output variable assignment causes an immediate I/O
transfer to occur by direct \fBread\fP(1) or \fBwrite\fP(1) system calls,
rather than collecting the data in a buffer for efficiency.
.SS "Other I/O extensions"
.nh
.TP 4
\fBSERV_LISTEN()\fP, \fBSET()\fP, \fBSSET()\fP
see \fBsnobol4func\fP(1).
.SS "I/O Layers"
.nh
The Macro SNOBOL4 and POSIX I/O architectures
have subtleties which interact, and are explained here:
.TP 4
Variable association
Input and output is done by reading or writing variables associated
with a unit number for I/O.
.IP
Input (maximum) record lengths are associated each \fIvariable association\fP!
.TP 4
Unit number
Multiple variables can be associated with the same unit number
using the \fBINPUT()\fP and \fBOUTPUT()\fP functions.
.IP
Each unit number refers to a \fBstdio\fP(3) stream
(except on broken systems like Windows, where socket handles
are incompatible with file handles, and all network I/O
is performed \*(lqunbuffered\*(rq).
.IP
Sequential named files can be associated with an I/O unit
when the \fB-r\fP option is given on the command line!
\fBREWIND()\fP should return to to after the program \fBEND\fP label!
.TP 4
\*(lqStandard I/O\*(rq Stream
\fBsnobol4\fP(1) performs \fBMOST\fP I/O through \*(lqStandard Input/Output\*(rq
streams. Multiple units can be associated with the same stdio stream
(\fBFILE\fP struct) using magic pathnames
(\*(lq\fB-\fP\*(rq and \fB/dev/std\fP{\fBin,out,err\fP}).
Buffering is performed by the stdio layer.
.TP 4
Operating System file descriptor
More than one stdio stream can be associated with the same O/S \*(lqfd\*(rq
(by opening magic pathname \*(lq\fB/dev/fd/\fP\fIn\fP\*(rq).
.IP
Each POSIX \*(lqfd\*(rq has a file position pointer, changed by
reading, writing and the \fBREWIND()\fP, \fBSET()\fP and \fBSSET()\fP functions.
.IP
\fINormally\fP terminal device \*(lqspecial files\*(rq have one set of
mode settings, but CSNOBOL4 associates (saves and restores) different
terminal settings (echo and the number of characters returned on read)
based on fd numbers.
.TP 4
Operating System open file object
More than one \*(lqfd\*(rq slot can be associated with the same \*(lqopen file\*(rq
object, either in multiple forks, or by \fBdup\fP(2) of the same fd.
This is often the case for stdin, stdout and stderr.
.IP
Open file objects have flags which effect all associated fds,
including input, output and append modes.
.TP 4
Operating System named file
Independent opens of the same named \*(lqregular\*(rq file will have
different open file objects, and thus have independent access modes
and file positions.
.IP
Terminal devices normally have one set of \*(lqline discipline\*(rq
mode settings, but CSNOBOL4 maintains different settings for each
file descriptor (see above).
.SH "BUGS"
.nh
This page was cut and pasted from various parts of the original
\fBsnobol4\fP(1) man page, and still needs review and cleanup.
.PP
All extensions should be annotated with the version they appeared in
(and what other implementations they're compatible or inspired by).
.PP
Record lengths.
.PP
Unit numbers.
.SH "SEE ALSO"
.nh
\fBsnobol4\fP(1)
