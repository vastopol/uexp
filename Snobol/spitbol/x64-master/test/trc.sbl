.def comment_asterisk
* Copyright 2012-2015 David Shields
* 
* This file is part of Macro SPITBOL.
* 
*     Macro SPITBOL is free software: you can redistribute it and/or modify
*     it under the terms of the GNU General Public License as published by
*     the Free Software Foundation, either version 2 of the License, or
*     (at your option) any later version.
* 
*     Macro SPITBOL is distributed in the hope that it will be useful,
*     but WITHOUT ANY WARRANTY; without even the implied warranty of
*     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*     GNU General Public License for more details.
* 
*     You should have received a copy of the GNU General Public License
*     along with Macro SPITBOL.  If not, see <http://www.gnu.org/licenses/>.
*
	&anchor = 0
	&trim = 1
	&stlimit = 10000000
	&stlimit = 10000000
	&dump = 3


	define('getname(varg)')
	define('adjust()i')

	names = array('10000')
	offsets = array('10000')
	n = 0
	min_val = 0
	max_val = 0
	dicname  = (differ(host(0)) host(0), 's-nasm.dic')
	output = ~input(.varfile,1,dicname)	'cannot open input' :s(end)
vloop	
	line = varfile			:f(vend)
	line break(' ') . name ' '   
+	     rem . offset :f(error)
v.add
	n = n + 1
	names[n] = name
	offsets[n] = +offset
					:(vloop)
vend
	i = 0
bloop
	gt(i = i + 1,n)		:s(bloop.end)
	offsets[i] = offsets[i] + min_val
*	output = '#offsets ' i ' ' offsets[i]
				:(bloop)
bloop.end
		:(loop)
copy
	output = trim(line)
loop	
	line = input 			:f(finis)
*  	output = 'input: ' line
	lt(size(line),15)		:s(loop.1)
	lne(substr(line,10,1),' ')	:s(loop.1)
	vname = substr(line,1,9)
	min_val = ident(vname,'off_c_aaa') +substr(line,11)
  	output = ident(vname,'off_c_aaa') 'min_val ' substr(line,11)
	max_val = ident(vname,'off_w_yyy') +substr(line,11)
  	output = ident(vname,'off_w_yyy') 'max_val ' substr(line,11)
	ident(vname,'off_c_aaa') adjust()
 	output = ident(vname,'off_w_yyy') 'max-min ' max_val - min_val
loop.1
*	output = '# ' line
	line 'Z' span('0123456789') . varg = getname(varg) :s(loop.1)
					:(copy)
error
	:(copy)
	output = 'ERROR line ' line	:(copy)

getname
	leq(substr(varg,1,1),'2')		:s(return)
	leq(substr(varg,1,1),'3')		:s(return)
	leq(substr(varg,1,1),'4')		:s(return)
	getname = 'xxxxxxxx'
	eq(min_val)			:s(return)
	val = +varg 
	lt(val, min_val)		:s(return)
	gt(val, max_val)		:s(return)
	getnameoff = 0
* 	output = 'getname arg ' varg
	i = n
* 	output = 'i,v,offsets '  i ' ' val ' ' offsets[i]
	eq(val, offsets[i])		:s(found)
	i = 1
*	output 'i,v,offsets '  i ' ' val ' ' offsets[i]
	eq(val, offsets[i])		:s(found)
*	output = 'getname looking for ' val
get.loop
	i = i + 1
*	output = 'i,n,val,offsets ' i ' ' n ' ' val ' ' offsets[i]

	gt(i,n)				:s(error)
	eq(val,offsets[i])		:s(found)
	lt(val, offsets[i + 1])		:s(found)f(get.loop)
found
* 	output = 'found ' varg ' ' i	
	matched = matched + 1
	getname = '!' names[i]  (ne(val, offsets[i])
+            '+' (val - offsets[i]), '')
+					:(return)

adjust
	min_val = +min_val
*	output = 'adjust min_val ' min_val
	ai = 0
adjust.1
	gt(ai = ai + 1,n)			:s(return)
	offsets[ai] = min_val + offsets[ai] 
* 	output = names[ai] ' ' offsets[ai]
					:(adjust.1)
	
finis
	&dump = 0
	output = 'matched ' matched ' entries'
end
