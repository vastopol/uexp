%!PS-Adobe-3.0
%%Creator: groff version 1.08
%%DocumentNeededResources: font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman
%%+ font Courier
%%+ font Symbol
%%DocumentSuppliedResources: procset grops 1.08 0
%%Pages: 18
%%PageOrder: Ascend
%%Orientation: Portrait
%%EndComments
%%BeginProlog
%%BeginResource: procset grops 1.08 0
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll 
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}bind def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/FL{
currentgray exch setgray fill setgray
}bind def
/BL/fill load def
/LW/setlinewidth load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
}bind def
/PEND{
clear
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
%%IncludeResource: font Times-Roman
%%IncludeResource: font Courier
%%IncludeResource: font Symbol
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72 def/PL
792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron/scaron/zcaron
/Ydieresis/trademark/quotesingle/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/space
/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright/parenleft
/parenright/asterisk/plus/comma/hyphen/period/slash/zero/one/two/three/four
/five/six/seven/eight/nine/colon/semicolon/less/equal/greater/question/at/A/B/C
/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash
/bracketright/circumflex/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q
/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase
/guillemotleft/guillemotright/bullet/florin/fraction/perthousand/dagger
/daggerdbl/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guilsinglleft/logicalnot/minus
/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu
/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guilsinglright
/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde
/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def/Courier@0 ENC0/Courier RE/Times-Roman@0
ENC0/Times-Roman RE/Times-Italic@0 ENC0/Times-Italic RE/Times-Bold@0 ENC0
/Times-Bold RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 12/Times-Bold@0 SF(The Snocone Pr)190.938 123 Q(ogramming Language)-.216 E
/F1 10/Times-Italic@0 SF(Andr)257.21 147 Q .3 -.15(ew K)-.37 H(oenig)-.25 E
(ABSTRA)264.535 189 Q(CT)-.3 E/F2 8/Times-Roman@0 SF(SNOBOL4)133 220.2 Q/F3 10
/Times-Roman@0 SF 1.371(is a well-kno)3.872 F 1.371
(wn programming language with con)-.25 F -.15(ve)-.4 G 1.371
(nient semantics and).15 F 2.392(clumsy syntax.)108 232.2 R -.15(Fo)7.392 G
(llo).15 E 2.392(wing the pattern of Ratfor and)-.25 F F2(EFL)4.892 E F3 4.892
(,w)C 4.892(eh)365.002 232.2 S -2.25 -.2(av e)379.334 232.2 T 2.393(added `)
5.093 F(`syntactic)-.74 E(sug)108 244.2 Q(ar')-.05 E 3.284('t)-.74 G(o)141.594
244.2 Q F2(SNOBOL4)3.284 E F3 3.284(,w)C .784(ith an e)198.882 244.2 R .784
(ye to)-.15 F -.1(wa)-.25 G .784(rd making it easier to use.).1 F 2.383 -.8
(We c)5.784 H .783(all the result).8 F F1(Sno-)3.283 E(cone)108 256.2 Q(.)-.15
E F3 2.651 -.8(We d)133 271.8 T 1.052
(escribe the Snocone language in enough detail that people not f).8 F 1.052
(amiliar with)-.1 F F2(SNOBOL4)108 283.8 Q F3
(can learn to use it, although pre)2.5 E(vious f)-.25 E(amiliarity with)-.1 E
F2(SNOBOL4)2.5 E F3(will help.)2.5 E .016
(This paper originally appeared in the proceedings of the)133 299.4 R F2
(USENIX)2.516 E F3 .016(conference in Port-)2.516 F(land, Ore)108 311.4 Q
(gon in June 1985.)-.15 E/F4 10/Times-Bold@0 SF(Intr)72 347.4 Q(oduction)-.18 E
F3 .86(The semantics of the)97 363 R F2(SNOBOL4)3.36 E F3 .86
(programming language)3.36 F/F5 7/Times-Roman@0 SF(1)319.24 358.9 Q F3 .86
(include such unusual and useful features as)326.1 363 R .167
(dynamic typing, a general-purpose g)72 375 R .166(arbage collector)-.05 F
2.666(,e)-.4 G .166(xcellent character string f)292.34 375 R .166
(acilities, associati)-.1 F .466 -.15(ve a)-.25 H(rrays,).15 E 1.275
(and strong run-time diagnostics.)72 387 R(Grisw)6.275 E(old,)-.1 E F5(2)250.6
382.9 Q F3(Gimpel,)257.875 387 Q F5(3)290.375 382.9 Q F3 1.275(and others ha)
297.65 387 R 1.576 -.15(ve d)-.2 H 1.276(ocumented man).15 F 3.776(yw)-.15 G
1.276(ays of doing)452.008 387 R(things in)72 399 Q F2(SNOBOL4)2.5 E F3
(that can only be accomplished with much more dif)2.5 E
(\214culty in other languages.)-.25 E(Unfortunately)97 414.6 Q 3.568(,t)-.65 G
1.068(he control structures of)161.298 414.6 R F2(SNOBOL4)3.568 E F3 1.067
(are archaic, and the f)3.567 F 1.067(act that blank is an operator)-.1 F .687
(tends to encourage certain types of errors that are hard to detect.)72 426.6 R
.687(Other aspects of the language mak)5.687 F 3.187(ei)-.1 G 3.187(ta)493.593
426.6 S(nuisance to construct lar)72 438.6 Q(ge programs out of small parts.)
-.18 E 2.018 -.8(To a)97 454.2 T .418(meliorate some of these problems, we ha)
.8 F .717 -.15(ve d)-.2 H .417(esigned and implemented a ne).15 F 2.917(wl)-.25
G .417(anguage that pro-)433.186 454.2 R(vides some syntactic sug)72 466.2 Q
(ar for)-.05 E F2(SNOBOL4)2.5 E F3 5(.T)C(he ob)245.15 466.2 Q
(vious name for such a language is)-.15 E F1(Snocone)2.5 E F3(.)A .682
(The design of the Snocone language w)97 481.8 R .683(as inspired by Ratfor)-.1
F F5(4)341.611 477.7 Q F3(and)348.294 481.8 Q F2(EFL)3.183 E F3(.)A F5(5)
382.641 477.7 Q F3(Lik)389.324 481.8 Q(e)-.1 E F2(EFL)3.183 E F3 3.183(,a)C
.683(nd unlik)435.084 481.8 R 3.183(eR)-.1 G(atfor)483.02 481.8 Q(,)-.4 E .193
(Snocone is a self-contained programming language, rather than a proper supers\
et of)72 493.8 R F2(SNOBOL4)2.693 E F3 5.192(.L)C(ik)461.538 493.8 Q 2.692(eR)
-.1 G(atfor)483.02 493.8 Q(,)-.4 E 2.087(and unlik)72 505.8 R(e)-.1 E F2(EFL)
4.587 E F3 4.588(,t)C 2.088(he Snocone translator mak)144.606 505.8 R 2.088
(es no attempt to produce)-.1 F F2(SNOBOL4)4.588 E F3 2.088
(output that is easy for)4.588 F(humans to understand.)72 517.8 Q(Hanson)97
533.4 Q F5(6)127.55 529.3 Q F3 .253(has written a similar)133.803 533.4 R 2.753
(,b)-.4 G .253(ut simpler preprocessor for)225.595 533.4 R F2(SNOBOL4)2.753 E
F3 5.253(.H)C .253(is preprocessor is lik)388.11 533.4 R 2.752(eR)-.1 G(atfor)
485.12 533.4 Q
(in that it does not change the statements in the basic language b)72 545.4 Q
(ut rather adds ne)-.2 E 2.5(ws)-.25 G(yntax.)405.39 545.4 Q(Grisw)97 561 Q
(old)-.1 E F5(7)134.12 556.9 Q F3 .247(has written a preprocessor for a langua\
ge similar to Snocone, the syntax of which is based)140.366 561 R(on Icon)72
573 Q F5(8)102.27 568.9 Q F3(rather than on C or)108.27 573 Q F2(EFL)2.5 E F3 5
(.H)C(is preprocessor is written in C, and uses Y)215.254 573 Q
(acc for its parsing.)-1 E(In contrast, Snocone has a syntax roughly based on \
C and is written in Snocone.)97 588.6 Q F4(What')72 612.6 Q 2.5(sn)-.37 G
(ice about)110.8 612.6 Q/F6 8/Times-Bold@0 SF(SNOBOL4)2.5 E F3 -1.11(Va)97
628.2 S .902(riables in)1.11 F F2(SNOBOL4)3.402 E F3 .901
(are dynamically typed: the type of an)3.402 F 3.401(yv)-.15 G .901
(ariable is the type of the v)355.463 628.2 R .901(alue most)-.25 F 1.178
(recently assigned to it.)72 640.2 R 1.178(Thus, declarations are unnecessary)
6.178 F 3.678(,a)-.65 G 1.178(nd, in f)324.604 640.2 R(act,)-.1 E F2(SNOBOL4)
3.678 E F3 1.178(has no declarations as)3.678 F(such \(e)72 652.2 Q
(xcept that procedures can ha)-.15 E .3 -.15(ve l)-.2 H(ocal v).15 E
(ariables\).)-.25 E .053(All operators and b)97 667.8 R .052
(uilt-in functions check their ar)-.2 F .052(gument types; each ar)-.18 F .052
(gument is con)-.18 F -.15(ve)-.4 G .052(rted automati-).15 F 1.646
(cally to an appropriate type.)72 679.8 R 4.146(Ar)6.646 G 1.646
(un-time diagnostic message results if a con)211.846 679.8 R -.15(ve)-.4 G
1.646(rsion is impossible.).15 F -.15(Fo)6.646 G(r).15 E .4
(instance, if an addend is a string,)72 691.8 R F2(SNOBOL4)2.9 E F3 .4
(will try to con)2.9 F -.15(ve)-.4 G .399(rt it to an inte).15 F .399
(ger or real number)-.15 F 2.899(,d)-.4 G .399(epending on)454.441 691.8 R
(the form of its v)72 703.8 Q 2.5(alue. If)-.25 F(the v)2.5 E
(alue is inappropriate to con)-.25 E -.15(ve)-.4 G
(rt to a numeric type, the program will halt.).15 E(Lik)97 719.4 Q 4.262(eL)-.1
G 1.762(isp, and unlik)125.602 719.4 R 4.262(em)-.1 G 1.762
(ost other languages,)199.678 719.4 R F2(SNOBOL4)4.262 E F3 1.762(does not ha)
4.262 F 2.062 -.15(ve a)-.2 H 2.062 -.15(ny ex).15 H 1.763
(plicit mechanism for).15 F 2.138(returning memory to the system.)72 731.4 R
(Rather)7.138 E 4.638(,t)-.4 G 2.138
(he implementation must detect when memory is no longer)254.138 731.4 R EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-2-)282.17 48 Q .236(needed and mak)72 84 R 2.736(et)
-.1 G .236(hat memory a)147.308 84 R -.25(va)-.2 G .236(ilable for re-use.).25
F .236(This mak)5.236 F .236(es the language harder to implement, b)-.1 F .237
(ut eas-)-.2 F .568(ier to use.)72 96 R .568
(One nice by-product of this sort of memory allocator is that)5.568 F/F1 8
/Times-Roman@0 SF(SNOBOL4)3.068 E F0 .568(programs tend to be free)3.068 F
(of arbitrary size limitations.)72 108 Q(One)97 123.6 Q F1(SNOBOL4)4.774 E F0
2.274(datatype is the)4.774 F/F2 10/Times-Italic@0 SF(pattern)4.774 E F0 4.775
(,w)C 2.275(hich describes an \(arbitrarily comple)269.685 123.6 R 2.275
(x\) set of character)-.15 F 3.21(strings. Brie\215y)72 135.6 R 3.21(,t)-.65 G
.709(he language incorporates a general top-do)142.5 135.6 R .709
(wn backtracking parser)-.25 F 5.709(.T)-.55 G .709(his parser is so easy)
421.734 135.6 R(to use that it is the usual w)72 147.6 Q
(ay of dealing with strings in)-.1 E F1(SNOBOL4)2.5 E F0(.)A 1.417
(Another useful datatype is the)97 163.2 R F2(table)3.917 E F0 6.417(.A)C 1.417
(table is lik)266.619 163.2 R 3.918(eao)-.1 G 1.418(ne-dimensional array)332.74
163.2 R 3.918(,e)-.65 G 1.418(xcept that its sub-)428.916 163.2 R .922
(scripts are not limited to being inte)72 175.2 R 3.422(gers. F)-.15 F .922
(or instance, a compiler symbol table might be maintained as a)-.15 F F1
(SNOBOL4)72 187.2 Q F0 .792
(table, with the subscript being the identi\214er and the v)3.292 F .793
(alue being some structure which holds the)-.25 F
(desired information about that identi\214er)72 199.2 Q(.)-.55 E .825
(An interesting and unusual semantic idea in)97 214.8 R F1(SNOBOL4)3.325 E F0
.825(is that of)3.325 F F2 .825(statement failur)3.325 F(e)-.37 E F0 5.825(.M)C
(an)444.725 214.8 Q 3.325(yo)-.15 G(perations)467.34 214.8 Q 1.289
(can easily encounter conditions that preclude their e)72 226.8 R -.15(xe)-.15
G 3.789(cution. F).15 F 1.289(or e)-.15 F 1.29
(xample, an attempt may be made to)-.15 F .232(access a non-e)72 238.8 R .232
(xistent array element, read be)-.15 F .232
(yond the last record of a \214le, search a string for a pattern that it)-.15 F
.147(does not contain, or e)72 250.8 R -.15(ve)-.25 G 2.647(nm).15 G(ak)182.875
250.8 Q 2.647(eac)-.1 G .147(omparison that gi)210.829 250.8 R -.15(ve)-.25 G
2.647(sa).15 G 2.647(nu)301.14 250.8 S(ne)313.787 250.8 Q .147(xpected result.)
-.15 F .147(When this happens, the oper)5.147 F(-)-.2 E(ation)72 262.8 Q F2
(fails)3.633 E F0 6.133(.U)C(sually)128.716 262.8 Q 3.632(,t)-.65 G 1.132(he f)
160.868 262.8 R 1.132(ailure of an operation implies the f)-.1 F 1.132
(ailure of the statement of which it is a part.)-.1 F .682(While statement f)72
274.8 R .682(ailure is not an error condition, it can be tested.)-.1 F .682
(In f)5.682 F .683(act, conditional transfer on the suc-)-.1 F(cess or f)72
286.8 Q
(ailure of a statement is virtually the only kind of control structure in)-.1 E
F1(SNOBOL4)2.5 E F0(.)A 4.095(Ag)97 302.4 S 1.595(ood implementation of)113.315
302.4 R F1(SNOBOL4)4.095 E F0 1.595(is Macrospitbol, by De)4.095 F -.1(wa)-.25
G 4.095(ra).1 G 1.595(nd McCann.)371.425 302.4 R/F3 7/Times-Roman@0 SF(9)422.46
298.3 Q F0 1.595(This is a portable)430.055 302.4 R 1.843
(threaded-code interpreter)72 314.4 R 4.343(,w)-.4 G 1.843(hich is f)188.296
314.4 R 1.843(ast and rob)-.1 F 1.844(ust enough to be used for `)-.2 F
(`production')-.74 E 4.344('p)-.74 G 4.344(urposes. F)450.366 314.4 R(or)-.15 E
-.15(ex)72 326.4 S(ample, on a V).15 E
(AX-11/780 it translates about 150 statements per second and e)-1.35 E -.15(xe)
-.15 G(cutes about 5,000.).15 E F1(SNOBOL4)97 342 Q F0 .025
(implementations in general ha)2.525 F .325 -.15(ve ex)-.2 H .024
(cellent run-time diagnostic f).15 F 2.524(acilities. The)-.1 F .024
(language de\214-)2.524 F(nition includes w)72 354 Q
(ays of tracing programs for deb)-.1 E(ugging, and of trapping almost an)-.2 E
2.5(yk)-.15 G(ind of run-time error)413.73 354 Q(.)-.55 E/F4 10/Times-Bold@0 SF
(What')72 378 Q 2.5(sn)-.37 G(ot nice about)110.8 378 Q/F5 8/Times-Bold@0 SF
(SNOBOL4)2.5 E F0(Here is a simple)97 393.6 Q F1(SNOBOL4)2.5 E F0
(program to add the inte)2.5 E(gers between 1 and 1000:)-.15 E/F6 10/Courier@0
SF(sum = 0)158 411.6 Q(term = 1)158 423.6 Q 20(loop sum)108 435.6 R 6(=s)6 G
(um + term)200 435.6 Q(term = term + 1)158 447.6 Q 41
(LE\(term,1000\) :s\(loop\))158 459.6 R(OUTPUT = "The sum is " sum)158 471.6 Q
(END)108 483.6 Q F0 1.001(The \214rst tw)97 505.2 R 3.501(ol)-.1 G 1.001
(ines of this program assign v)156.293 505.2 R 1.001(alues to v)-.25 F 3.501
(ariables. The)-.25 F(name)3.501 E F2(loop)3.501 E F0 1.001
(in the third line is a)3.501 F(label; it is recognized as such because it be)
72 517.2 Q(gins the line without an)-.15 E 2.5(yw)-.15 G
(hite space ahead of it.)351.94 517.2 Q .036(The \214fth line calls a b)97
532.8 R .036(uilt-in function to compare the v)-.2 F .035(alue of the v)-.25 F
(ariable)-.25 E F2(term)2.535 E F0 .035(to 1000.)2.535 F F1(SNOBOL4)5.035 E F0
(has)2.535 E .013(no comparison operators: all comparisons are done by)72 544.8
R F2(pr)2.513 E(edicate)-.37 E F0 .013
(functions that either return the null string if)2.513 F .319
(the condition being tested is true or f)72 556.8 R .319
(ail if the condition is f)-.1 F 2.819(alse. The)-.1 F F6(:s\(loop\))2.819 E F0
.319(at the end of the line is a)2.819 F(conditional)72 568.8 Q F4 .238(go to)
2.738 F F0 2.738(:i)C 2.738(tc)149.104 568.8 S .238
(auses control to transfer to the label)159.062 568.8 R F2(loop)2.738 E F0 .239
(if the statement succeeds, and to the follo)2.739 F(w-)-.25 E
(ing statement if it f)72 580.8 Q(ails.)-.1 E
(In contrast, the program looks lik)97 596.4 Q 2.5(et)-.1 G(his in Snocone:)
239.94 596.4 Q F6(sum = 0)108 614.4 Q(term = 1)108 626.4 Q(do {)108 638.4 Q
(sum = sum + term)133 650.4 Q(term = term + 1)133 662.4 Q 6(}w)108 674.4 S
(hile \(term <= 1000\))126 674.4 Q(OUTPUT = "The sum is " && sum)108 686.4 Q F0
.294(In the past \214fteen years, the trend in programming language design has\
 been o)97 708 R -.15(ve)-.15 G .293(rwhelmingly to).15 F -.1(wa)-.25 G(rd).1 E
1.014(programming languages with control structures that mak)72 720 R 3.514(ei)
-.1 G 3.514(tr)315.358 720 S 1.014(easonable to write programs with at most a)
324.982 720 R EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-3-)282.17 48 Q -.15(ve)72 84 S .907(ry fe).15 F(w)-.25
E/F1 10/Times-Bold@0 SF .907(go to)3.407 F F0(statements.)3.407 E/F2 8
/Times-Roman@0 SF(SNOBOL4)5.907 E F0 -.15(ex)3.407 G .907(hibits almost the e)
.15 F .907(xact opposite of this trend: essentially the only)-.15 F .567
(control structure in)72 96 R F2(SNOBOL4)3.067 E F0 .568
(is a form of conditional)3.067 F F1 .568(go to)3.068 F F0 3.068
(statement. There)3.068 F .568(is no block structure, and all)3.068 F .793
(labels are global.)72 108 R .793(Thus, writing a)5.793 F F2(SNOBOL4)3.293 E F0
.792(program requires a constant ef)3.293 F .792(fort to in)-.25 F -.15(ve)-.4
G .792(nt ne).15 F 3.292(wl)-.25 G .792(abel names,)455.998 108 R .08
(and to choose names that ha)72 120 R .38 -.15(ve a)-.2 H 2.58(tl).15 G .081
(east some chance of telling the reader whether their use is local or global.)
209.13 120 R 1.622(The programmer')97 135.6 R 4.122(sj)-.55 G 1.622
(ob is not made an)179.674 135.6 R 4.121(ye)-.15 G 1.621
(asier by the peculiar w)270.123 135.6 R(ay)-.1 E F2(SNOBOL4)4.121 E F0 1.621
(handles subroutines.)4.121 F F2(SNOBOL4)72 147.6 Q F0 .133
(subroutines are de\214ned at run time by a b)2.632 F .133
(uilt-in function called)-.2 F/F3 10/Courier@0 SF(DEFINE)2.633 E F0 5.133(.I)C
.133(ts ar)413.548 147.6 R .133(gument is a)-.18 F/F4 10/Times-Italic@0 SF(pr)
2.633 E(oto-)-.45 E(type)72 159.6 Q F0 .001
(of the subroutine to be de\214ned \255 a character string that describes ho)
2.501 F 2.501(wt)-.25 G .001(he subroutine is to be used.)374.564 159.6 R(The)
5.001 E(subroutine')72 171.6 Q 3.485(se)-.55 G .986
(ntry point is the label with the same name.)128.815 171.6 R .986
(Because the statement bearing this label is not)5.986 F .684(special in an)72
183.6 R 3.184(yo)-.15 G .684(ther w)136.392 183.6 R(ay)-.1 E 3.184(,i)-.65 G
3.184(tm)179.5 183.6 S .684(ust be placed where it will not be e)193.244 183.6
R -.15(xe)-.15 G .684(cuted in the ordinary course of e).15 F -.15(ve)-.25 G
(nts.).15 E(The call to)72 195.6 Q F3(DEFINE)2.5 E F0 2.5(,o)C 2.5(nt)163.27
195.6 S(he other hand, must be e)173.55 195.6 Q -.15(xe)-.15 G
(cuted before the subroutine it de\214nes can be used.).15 E 1.376(This leads)
97 211.2 R F2(SNOBOL4)3.876 E F0 1.376(programmers into contortions.)3.876 F
2.976 -.8(To k)6.376 H 1.376(eep the).7 F F3(DEFINE)3.876 E F0 1.377
(call near the subroutine)3.876 F(body)72 223.2 Q 2.5(,o)-.65 G(ne must in)
101.35 223.2 Q -.15(ve)-.4 G(nt yet another label:).15 E F3 32
(DEFINE\("square\(x\)"\) :\(square.end\))156 241.2 R 6(square square)108 253.2
R 50 6(=x*x :)6 H(\(RETURN\))314 253.2 Q(square.end)108 265.2 Q F0(Alternati)72
283.2 Q -.15(ve)-.25 G(ly).15 E 2.53(,o)-.65 G .03(ne can put all the)133.75
283.2 R F3(DEFINE)2.53 E F0 .03(calls in one place, at the cost of mo)2.53 F
.03(ving the body of each subrou-)-.15 F(tine arbitrarily f)72 295.2 Q
(ar from where its prototype appears.)-.1 E
(The Snocone programmer has an easier job:)97 310.8 Q F3
(procedure square \(x\) {)108 328.8 Q(return x * x)133 340.8 Q(})108 352.8 Q F1
(Moti)72 382.8 Q -.1(va)-.1 G(tion).1 E F0(Snocone')97 398.4 Q 2.503(sp)-.55 G
.003(urpose, then, is to mak)145.613 398.4 R 2.503(ei)-.1 G 2.503(te)245.798
398.4 S .003(asy for a programmer used to a block-structured language lik)
255.521 398.4 R(e)-.1 E 4.13(Ct)72 410.4 S 4.13(ow)85.58 410.4 S 1.63
(rite programs that ha)101.93 410.4 R 1.93 -.15(ve t)-.2 H 1.629
(he freedom and semantic \215e).15 F 1.629(xibility of)-.15 F F2(SNOBOL4)4.129
E F0 6.629(.T)C 4.129(ot)420.904 410.4 S 1.629(his end, we ha)432.813 410.4 R
-.15(ve)-.2 G(changed the)72 422.4 Q F2(SNOBOL4)2.5 E F0(language in se)2.5 E
-.15(ve)-.25 G(ral w).15 E(ays.)-.1 E(First, we introduced an e)97 438 Q
(xplicit concatenation operator)-.15 E(.)-.55 E F2(SNOBOL4)5 E F0
(uses blank for concatenation, so)2.5 E F3 6(y=f)108 456 S(\(x\))138 456 Q F0
(is a function call, b)72 474 Q(ut)-.2 E F3 6(y=f\()108 492 S(x\))150 492 Q F0
.252(assigns to)72 510 R F3(y)2.752 E F0 .252(the concatenation of the v)2.752
F .252(alues of the v)-.25 F(ariables)-.25 E F3(f)2.752 E F0(and)2.752 E F3(x)
2.752 E F0 5.252(.W)C 2.752(ec)363.288 510 S(hose)374.92 510 Q F3(&&)2.752 E F0
.253(to represent concatena-)2.752 F(tion because)72 522 Q F2(SNOBOL4)2.5 E F0
(programs often use concatenation for the same purpose that C programs use)2.5
E F3(&&)2.5 E F0(.)A .049(Second, we allo)97 537.6 R 2.548(wm)-.25 G .048
(uch the same freedom with spaces that C does, with one e)177.996 537.6 R 2.548
(xception: ne)-.15 F .048(wline ends)-.25 F 2.754(as)72 549.6 S 2.754
(tatement. Statements)83.084 549.6 R .254
(may be continued onto multiple lines in much the same w)2.754 F .254(ay as in)
-.1 F F2(EFL)2.755 E F0 .255(programs: a)2.755 F
(line is continued if it ends with an operator or some kind of open brack)72
561.6 Q(et.)-.1 E 2.681(Third, we ha)97 577.2 R 2.981 -.15(ve a)-.2 H 2.681
(dded procedure and structure declarations.).15 F 2.681
(These things are accomplished in)7.681 F F2(SNOBOL4)72 589.2 Q F0
(by calling b)2.5 E(uilt-in subroutines, and the conte)-.2 E
(xt of the calls is often obscure.)-.15 E(Finally)97 604.8 Q 3.531(,w)-.65 G
3.531(eh)137.941 604.8 S -2.25 -.2(av e)150.912 604.8 T 1.032(introduced contr\
ol structures similar to those in C and other block-structured lan-)3.731 F
(guages: the)72 616.8 Q F3(if)2.5 E F0(,)A F3(while)2.5 E F0(,)A F3(for)2.5 E
F0 2.5(,a)C(nd)199.21 616.8 Q F3(do)2.5 E F0(statements.)2.5 E F1(LANGU)72
640.8 Q -.55(AG)-.6 G 2.5(ED).55 G(ESCRIPTION)138.35 640.8 Q(Lexical Con)72
664.8 Q -.1(ve)-.4 G(ntions).1 E F0 .975(Blanks \(spaces and tabs, b)97 680.4 R
.975(ut not ne)-.2 F .975(wlines\) may not appear within a tok)-.25 F .975
(en, b)-.1 F .975(ut may freely separate)-.2 F(tok)72 692.4 Q 2.5
(ens. Comments)-.1 F(be)2.5 E(gin with a)-.15 E F3(#)2.5 E F0
(character and end at the end of the line.)2.5 E .685(Constants may be inte)97
708 R .686(gers, reals, or strings.)-.15 F .686
(There are no signed numeric constants.)5.686 F(Inte)5.686 E .686(gers range)
-.15 F .655(from 0 to2)72 720 R/F5 7/Times-Roman@0 SF(31)116.113 716 Q/F6 10
/Symbol SF(-)125.612 720 Q F0 3.155(1. Real)1.666 F .655
(constants are short-precision only)3.155 F 3.155(,a)-.65 G .655
(nd must contain either a decimal point or an)313.518 720 R F3(E)3.154 E EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-4-)282.17 48 Q(\(or)72 84 Q/F1 10/Courier@0 SF(e)2.577
E F0 2.577(\). String)B .078
(constants may be delimited by single or double quotes with the same meaning.)
2.577 F .078(Characters in)5.078 F .534(quotes recei)72 96 R .834 -.15(ve n)
-.25 H 3.034(os).15 G .534(pecial interpretation.)149.572 96 R 3.034(As)5.534 G
.534(ingle quote may appear in strings delimited by double quotes,)252.544 96 R
(and vice v)72 108 Q(ersa.)-.15 E 1.835(Identi\214ers may be of an)97 123.6 R
4.335(yl)-.15 G 4.335(ength. All)211.285 123.6 R 1.835
(characters in an identi\214er are signi\214cant, b)4.335 F 1.835
(ut their case is)-.2 F .044(presently not signi\214cant.)72 135.6 R .044
(Case may become signi\214cant in the future.)5.044 F .044
(An identi\214er is a non-empty sequence)5.044 F .94(of letters and digits, be)
72 147.6 R .94(ginning with a letter)-.15 F 5.94(.U)-.55 G .941
(nderscore \(_\) is a letter)265.75 147.6 R 5.941(.T)-.55 G .941
(he same identi\214er may be used)375.705 147.6 R
(independently to represent a procedure, label, or v)72 159.6 Q(ariable.)-.25 E
/F2 10/Times-Bold@0 SF(Statement Separation)72 183.6 Q F0 .516
(Snocone delimits statements much lik)97 199.2 R 3.016(et)-.1 G .516(he Shell)
260.87 199.2 R/F3 7/Times-Roman@0 SF(10)293.886 195.1 Q F0 .516
(\(the command interpreter in the)303.902 199.2 R/F4 8/Times-Roman@0 SF(UNIX)
3.016 E F0 3.016<ae6f>C(perating)471.23 199.2 Q(system\))72 211.2 Q F3(11)
103.11 207.1 Q F0(or)113.107 211.2 Q F4(EFL)2.997 E F0 5.497(.A)C .497
(statement is ended either by a semicolon or ne)156.872 211.2 R .497(wline, e)
-.25 F .498(xcept that if the last tok)-.15 F .498(en on a)-.1 F .917
(line is an operator or open parenthesis or brack)72 223.2 R .917(et, the ne)
-.1 F .916(xt line is automatically considered as part of the)-.15 F
(current statement.)72 235.2 Q(Ne)5 E
(wlines may also separate clauses of compound statements, so)-.25 E F1
(if \(a < 0\))108 253.2 Q 6(a=0)133 265.2 S F0
(is acceptable and means the same as)72 283.2 Q F1(if \(a < 0\) a = 0)108 301.2
Q F0(or)72 319.2 Q 2.5(,s)-.4 G(preading things as much as possible:)88.82
319.2 Q F1(if \()108 337.2 Q 6(a<)108 349.2 S(0\))108 361.2 Q 6(a=)108 373.2 S
(0)108 385.2 Q F2(File Inclusion)72 415.2 Q F0 .857(The contents of an arbitra\
ry \214le can be incorporated into the program by writing an)97 430.8 R/F5 10
/Times-Italic@0 SF .857(include line)3.357 F F0(in)3.358 E(one of the follo)72
442.8 Q(wing four forms:)-.25 E F1(#include ")108 460.8 Q F5(\214le)A F1(")A
(#include ')108 472.8 Q F5(\214le)A F1(')A(#include <)108 484.8 Q F5(\214le)A
F1(>)A(#include {)108 496.8 Q F5(\214le)A F1(})A F0 1.957
(Spaces may appear between)72 514.8 R F1(#)4.457 E F0(and)4.456 E F1(include)
4.456 E F0 6.956(.T)C 1.956
(he contents of the named \214le are substituted for the)281.706 514.8 R F1
(include)72 526.8 Q F0(line.)2.5 E 1.453(The e)97 542.4 R 1.453(xact beha)-.15
F 1.453(vior of an)-.2 F F1(include)3.953 E F0 1.453
(line depends on the delimiters surrounding the \214le name.)3.953 F(If)6.454 E
1.068(quotes are used \(single or double\), the \214le is sought in the curren\
t directory)72 554.4 R 6.068(.I)-.65 G 3.568(fb)397.648 554.4 S(rack)409.546
554.4 Q 1.068(ets are used \(angle)-.1 F(brack)72 566.4 Q .491(ets or curly br\
aces\), the \214le is sought in an installation-dependent system library \()-.1
F F5(/usr/lib/snocone)A F0(on)2.991 E .729(our systems\).)72 578.4 R .728
(If double quotes or angle brack)5.729 F .728
(ets are used, the \214le is included unconditionally)-.1 F 3.228(,e)-.65 G
-.15(ve)464.924 578.4 S 3.228(ni).15 G 3.228(ft)485.222 578.4 S(he)494.56 578.4
Q .48(same \214le is included se)72 590.4 R -.15(ve)-.25 G .48(ral times.).15 F
.481
(If single quotes or curly braces are used, the \214le will only be included)
5.48 F(once, e)72 602.4 Q -.15(ve)-.25 G 2.5(ni).15 G 2.5(fi)119.64 602.4 S 2.5
(ti)128.25 602.4 S 2.5(sn)136.31 602.4 S(amed in se)147.7 602.4 Q -.15(ve)-.25
G(ral).15 E F1(include)2.5 E F0(lines.)2.5 E 1.696(This latter beha)97 618 R
1.696(vior is useful in the follo)-.2 F 1.695(wing sort of situation.)-.25 F
1.695(Suppose that procedure)6.695 F F5(pr)4.195 E(oc1)-.45 E F0(is)4.195 E
.291(de\214ned in \214le)72 630 R F5(pr)2.791 E(oc1.h)-.45 E F0 2.791(,a)C .291
(nd procedure)170.484 630 R F5(pr)2.791 E(oc2)-.45 E F0 .291
(is de\214ned in \214le)2.791 F F5(pr)2.791 E(oc2.h)-.45 E F0 5.291(.A)C .291
(program that calls both)367.733 630 R F5(pr)2.792 E(oc1)-.45 E F0(and)2.792 E
F5(pr)72 642 Q(oc2)-.45 E F0(might then contain:)2.5 E F1(#include "proc1.h")
108 660 Q(#include "proc2.h")108 672 Q F0(No)72 690 Q 1.3 -.65(w, s)-.25 H
(uppose that).65 E F5(pr)2.5 E(oc1)-.45 E F0(is changed to call)2.5 E F5(pr)2.5
E(oc2)-.45 E F0 5(.I)C(f)279.06 690 Q F5(pr)2.5 E(oc1.h)-.45 E F0
(is made to contain)2.5 E F1(#include "proc2.h")108 708 Q F0 .581(then our h)72
726 R .581(ypothetical sample program will wind up with tw)-.05 F 3.081(oc)-.1
G .58(opies of)327.64 726 R F5(pr)3.08 E(oc2.h)-.45 E F0 .58
(and will therefore run into)3.08 F EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-5-)282.17 48 Q
(trouble with duplicate procedure de\214nitions.)72 84 Q(If, ho)5 E(we)-.25 E
-.15(ve)-.25 G -.4(r,).15 G/F1 10/Times-Italic@0 SF(pr)2.9 E(oc1.h)-.45 E F0
(contains:)2.5 E/F2 10/Courier@0 SF(#include 'proc2.h')108 102 Q F0
(and the main program contains:)72 120 Q F2(#include 'proc1.h')108 138 Q
(#include 'proc2.h')108 150 Q F0(then)72 168 Q F1(pr)2.5 E(oc2)-.45 E F0
(will be de\214ned only once.)2.5 E/F3 10/Times-Bold@0 SF(Expr)72 192 Q
(ession Ev)-.18 E(aluation, Success, and F)-.1 E(ailur)-.25 E(e)-.18 E F0(Ev)97
207.6 Q(aluating an e)-.25 E(xpression has one of three outcomes: a v)-.15 E
(alue, f)-.25 E(ailure, or error)-.1 E(.)-.55 E 1.101(Errors normally result i\
n a diagnostic message and termination of the program, and arise from the)97
223.2 R .021(usual sorts of things: o)72 235.2 R -.15(ve)-.15 G(r\215o).15 E
1.321 -.65(w, u)-.25 H(nder\215o).65 E 1.321 -.65(w, d)-.25 H -.25(iv).65 G
.021(ision by zero, impossible con).25 F -.15(ve)-.4 G .02
(rsions, running out of memory).15 F(,)-.65 E(and so on.)72 247.2 Q -.15(Fa)97
262.8 S .352(ilure, on the other hand, is not an error condition.).15 F .352
(An e)5.352 F .352(xpression that f)-.15 F .353(ails is merely one that does)
-.1 F .014(not yield a v)72 274.8 R 2.514(alue. Examples)-.25 F .014(of e)2.514
F .014(xpressions that f)-.15 F .014(ail include attempts to refer to non-e)-.1
F .013(xistent array elements,)-.15 F .598(attempts to read be)72 286.8 R .599
(yond end of \214le, and e)-.15 F -.15(ve)-.25 G 3.099(nc).15 G .599
(omparisons that yield une)263.467 286.8 R .599(xpected results.)-.15 F -.15
(Fo)5.599 G 3.099(ri).15 G .599(nstance, the)456.191 286.8 R -.15(ex)72 298.8 S
(pression).15 E F2 6(a<b)108 316.8 S F0(yields a null string if)72 334.8 Q F2
(a)2.5 E F0(is indeed less than)2.5 E F2(b)2.5 E F0 2.5(,a)C(nd f)256.77 334.8
Q(ails otherwise.)-.1 E(Most operators f)97 350.4 Q(ail if an)-.1 E 2.5(yo)-.15
G 2.5(ft)205.9 350.4 S(heir operands f)214.51 350.4 Q 2.5(ails. The)-.1 F(fe)
2.5 E 2.5(we)-.25 G(xceptions will be noted belo)335.36 350.4 Q -.65(w.)-.25 G
.327(An e)97 366 R .327(xpression that al)-.15 F -.1(wa)-.1 G .327
(ys either yields a null string or f).1 F .327(ails is sometimes called a)-.1 F
F1(pr)2.826 E(edicate)-.37 E F0 5.326(.T)C(esting)480.11 366 Q .853(such e)72
378 R .853(xpressions for success or f)-.15 F .853(ailure in)-.1 F F2(if)3.353
E F0(,)A F2(while)3.353 E F0 3.354(,a)C(nd)302.218 378 Q F2(do)3.354 E F0 .854
(statements is the primary w)3.354 F .854(ay of af)-.1 F(fecting)-.25 E
(the \215o)72 390 Q 2.5(wo)-.25 G 2.5(fc)111.75 390 S(ontrol in Snocone.)122.02
390 Q F3(Data T)72 414 Q(ypes, Declarations, and Scope)-.74 E F0 -1.11(Va)97
429.6 S 2.042(riables in Snocone are dynamically typed: a v)1.11 F 2.042
(ariable has the type of the v)-.25 F 2.042(alue most recently)-.25 F .297
(assigned to it.)72 441.6 R .297(Except for a fe)5.297 F 2.797(wp)-.25 G .297
(rede\214ned v)207.969 441.6 R .297(ariables \(described under)-.25 F F1 .298
(pattern matc)2.798 F(hing)-.15 E F0 .298(\), all v)B .298(ariables ha)-.25 F
-.15(ve)-.2 G .241(the null string as their initial v)72 453.6 R 2.741
(alues. All)-.25 F -.25(va)2.741 G .241(riables are global, b).25 F .24
(ut procedures can nominate v)-.2 F .24(ariables whose)-.25 F -.25(va)72 465.6
S(lues will automatically be sa).25 E -.15(ve)-.2 G 2.5(da).15 G 2.5(te)216.1
465.6 S(ntry and restored at e)225.82 465.6 Q 2.5(xit. The)-.15 F
(only declarations de\214ne structures:)2.5 E F2(struct cons {car, cdr})108
483.6 Q F0 4.014(In ef)72 501.6 R 4.014
(fect, this declaration de\214nes three procedures named)-.25 F F2(cons)6.514 E
F0(,)A F2(car)6.514 E F0 6.514(,a)C(nd)399.65 501.6 Q F2(cdr)6.515 E F0 9.015
(.T)C 4.015(he v)451.79 501.6 R 4.015(alue of)-.25 F F2(cons\(a,b\))72 513.6 Q
F0 .17(is a ne)2.67 F(wly-created)-.25 E F2(cons)2.67 E F0 .17(object with)2.67
F F2(a)2.67 E F0(and)2.67 E F2(b)2.67 E F0 .17(as the v)2.67 F .17
(alues of its)-.25 F F2(car)2.67 E F0(and)2.67 E F2(cdr)2.67 E F0 .17
(\214elds, respec-)2.67 F(ti)72 525.6 Q -.15(ve)-.25 G(ly).15 E 5.303(.T)-.65 G
.304(he \214elds, in turn, are accessed by similarly-named functions.)107.643
525.6 R -.15(Fo)5.304 G 2.804(ri).15 G .304(nstance, the)377.16 525.6 R F2(cdr)
2.804 E F0 .304(\214eld of)2.804 F F2(cons)2.804 E F0(structure)72 537.6 Q F2
(x)2.5 E F0(is accessed as)2.5 E F2(cdr\(x\))2.5 E F0 5(.T)C(hus this program:)
225.08 537.6 Q F2(struct cons {car, cdr})108 555.6 Q 6(a=c)108 567.6 S
(ons \(3, cons \(4, 5\)\))138 567.6 Q(OUTPUT = car \(cdr \(a\)\))108 579.6 Q F0
(prints)72 597.6 Q F2(4)2.5 E F0 5(.T)C
(he procedures corresponding to \214eld names may be used as the tar)116.89
597.6 Q(get of an assignment:)-.18 E F2(car \(a\) = "Hello")108 615.6 Q F0 .688
(Snocone of)72 633.6 R .688(fers other data types than those described abo)-.25
F -.15(ve)-.15 G 5.688(.W).15 G .688(hile numeric constants cannot be ne)
331.192 633.6 R -.05(ga)-.15 G(ti).05 E -.15(ve)-.25 G(,).15 E -.25(va)72 645.6
S .184(riables and e).25 F .184(xpressions suf)-.15 F .184
(fer from no such restriction.)-.25 F .185(Strings may be of an)5.185 F 2.685
(yl)-.15 G .185(ength up to an implemen-)400.49 645.6 R 1.451
(tation-de\214ned upper bound, usually man)72 657.6 R 3.951(yt)-.15 G 1.451
(housands of characters.)251.315 657.6 R 1.451(All v)6.451 F 1.451(ariables ha)
-.25 F 1.75 -.15(ve t)-.2 H 1.45(he null string as).15 F(their initial v)72
669.6 Q(alue.)-.25 E(Aggre)97 685.2 Q -.05(ga)-.15 G .525(te v).05 F .525
(alues come in tw)-.25 F 3.025(ot)-.1 G .525(ypes: arrays and tables.)225.995
685.2 R .525(Each type is created by a b)5.525 F .525(uilt-in procedure)-.2 F
(with the same name.)72 697.2 Q(Thus:)5 E F2 6(a=A)108 715.2 S(RRAY \(20\))138
715.2 Q EP
%%Page: 6 6
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-6-)282.17 48 Q .409(creates a 20-element array)72 84 R
2.909(,i)-.65 G .409
(nitializes each element to the null string, and assigns it to a.)185.996 84 R
.408(The second ar)5.409 F(gu-)-.18 E
(ment to the array procedure is an initializing v)72 96 Q(alue:)-.25 E/F1 10
/Courier@0 SF 6(a=A)108 114 S(RRAY \(20, -1\))138 114 Q F0(mak)72 132 Q .406
(es a an array of 20 elements, each with v)-.1 F .407(alue \2551.)-.25 F 2.007
-.8(To g)5.407 H .407(et multi-dimensional arrays, e).8 F .407
(xpress the dimen-)-.15 F(sions as a string:)72 144 Q F1 6(a=A)108 162 S
(RRAY \('4,5', -1\))138 162 Q F0(One can also gi)72 180 Q .3 -.15(ve ex)-.25 H
(plicit lo).15 E(wer bounds:)-.25 E F1 6(a=A)108 198 S(RRAY \('-10:10'\))138
198 Q F0(The def)72 216 Q(ault lo)-.1 E(wer bound is 1.)-.25 E
(Array elements are referenced by Algol-lik)97 231.6 Q 2.5(es)-.1 G(ubscripts:)
280.17 231.6 Q F1(a[i,j] = a[i,j] + b[i,k] * c[k,j])108 249.6 Q F0 .164
(Each array element beha)72 267.6 R -.15(ve)-.2 G 2.664(sa).15 G 2.664(sav)
191.146 267.6 S .163(ariable, and can therefore ha)209.554 267.6 R .463 -.15
(ve a v)-.2 H .163(alue of an)-.1 F 2.663(yd)-.15 G .163
(ata type, independently of)399.641 267.6 R(an)72 279.6 Q 2.5(yo)-.15 G
(ther element.)93.79 279.6 Q 2.5(At)97 295.2 S(able is lik)109.5 295.2 Q 2.5
(eao)-.1 G(ne-dimensional array whose subscripts are not restricted to inte)
167.17 295.2 Q(gers:)-.15 E F1 6(t=T)108 313.2 S(ABLE \(20\))138 313.2 Q F0
.638(The ar)72 331.2 R .638(gument to the)-.18 F F1(TABLE)3.138 E F0 .638
(procedure is an estimate of the maximum number of elements that will actu-)
3.138 F 1.109(ally be stored in the table.)72 343.2 R 1.108
(If substantially more elements than this are stored, access will be)6.109 F
1.108(gin to slo)-.15 F(w)-.25 E(do)72 355.2 Q 2.599(wn. On)-.25 F .099
(the other hand, gi)2.599 F .099(ving too lar)-.25 F .099(ge an initial v)-.18
F .1(alue w)-.25 F .1(astes space.)-.1 F .1(Once a table has been created, an)
5.1 F(y)-.15 E -.25(va)72 367.2 S .201(lue can be used for a subscript.).25 F
F1(t[a])5.201 E F0(and)2.701 E F1(t[b])2.701 E F0 .201
(will refer to the same element if and only if a and b are)2.701 F 3.233
(identical. The)72 379.2 R .733(precise meaning of `)3.233 F(`identical')-.74 E
3.233('i)-.74 G 3.233(sg)266.538 379.2 S -2.15 -.25(iv e)278.661 379.2 T 3.233
(nw).25 G .733(ith the description of the)305.934 379.2 R F1(::)3.233 E F0(and)
3.233 E F1(:!:)3.234 E F0(operators;)3.234 E(suf)72 391.2 Q
(\214ce it to say that)-.25 E F1(3)2.5 E F0(and)2.5 E F1("3")2.5 E F0
(are not identical, and that after e)2.5 E -.15(xe)-.15 G(cuting).15 E F1 6
(a=b)108 409.2 S(a)72 427.2 Q F0(and)2.5 E F1(b)2.5 E F0(are identical re)2.5 E
-.05(ga)-.15 G(rdless of what v).05 E(alues the)-.25 E 2.5(yh)-.15 G
(ad before.)285.57 427.2 Q/F2 10/Times-Bold@0 SF(Binary Operators)72 451.2 Q F0
.007(The follo)97 466.8 R .007
(wing operators are grouped in order of decreasing priority)-.25 F 5.006(.U)
-.65 G .006(nless otherwise stated, the)379.986 466.8 R 2.506(ya)-.15 G(re)
496.23 466.8 Q(left-associati)72 478.8 Q -.15(ve)-.25 G(.).15 E F1 6(.$)97
494.4 S F0 -.15(Pa)1 G(ttern v).15 E(alue assignment \(see P)-.25 E(atterns\))
-.15 E F1(^)97 510 Q F0 .698(Exponentiation \(right-associati)122 510 R -.15
(ve)-.25 G 3.198(\). The).15 F .698(right ar)3.198 F .698
(gument must be an inte)-.18 F(ger)-.15 E 5.698(.I)-.55 G 3.199(fb)435.012 510
S .699(oth ar)446.541 510 R(guments)-.18 E(are inte)122 522 Q
(gers, the right ar)-.15 E(gument must be non-ne)-.18 E -.05(ga)-.15 G(ti).05 E
-.15(ve)-.25 G F1 6(*/%)97 537.6 S F0 1.186(Multiplication, di)122 549.6 R
1.186(vision, and remainder)-.25 F 6.186(.A)-.55 G 3.686(si)297.604 549.6 S
3.685(nC)307.96 549.6 S 3.685(,a)323.315 549.6 S 1.185(nd as not in)333.94
549.6 R/F3 8/Times-Roman@0 SF(SNOBOL4)3.685 E F0 3.685(,m)C 1.185
(ultiplication and)437.535 549.6 R(di)122 561.6 Q(vision ha)-.25 E .3 -.15
(ve t)-.2 H(he same precedence.).15 E F1 6(+-)97 577.2 S F0
(Addition and subtraction.)1 E F1
(== != < > <= >= :==: :!=: :<: :>: :<=: :>=: :: :!:)97 592.8 Q F0 .992
(Comparison predicates.)122 604.8 R .992
(Each of these operators returns a null string if the indicated relation)5.992
F .465(holds, and f)122 616.8 R .465(ails if not.)-.1 F .464
(The \214rst six do numeric comparisons: an error results if either operand)
5.465 F .346(cannot be con)122 628.8 R -.15(ve)-.4 G .346(rted to a number).15
F 5.346(.T)-.55 G .346(he ne)267.386 628.8 R .346
(xt six do string comparisons: an error results if either)-.15 F 1.132
(operand cannot be con)122 640.8 R -.15(ve)-.4 G 1.131(rted to a string.).15 F
1.131(The last tw)6.131 F 3.631(ot)-.1 G 1.131(est if the tw)352.624 640.8 R
3.631(oo)-.1 G 1.131(perands are identical.)416.488 640.8 R -1.11(Va)122 652.8
S 1.306(lues of dif)1.11 F 1.306(ferent data types are ne)-.25 F -.15(ve)-.25 G
3.806(ri).15 G 3.806(dentical. Strings)292.382 652.8 R 1.307
(and numbers are identical if their)3.807 F(data types and v)122 664.8 Q
(alues match.)-.25 E(Other v)5 E(alues are identical if the)-.25 E 2.5(yr)-.15
G(efer to the same object.)377.68 664.8 Q F1(&&)97 680.4 Q F0 2.987
(Concatenation. The)122 680.4 R .487(left operand is e)2.987 F -.25(va)-.25 G
.486(luated \214rst; if its e).25 F -.25(va)-.25 G .486(luation f).25 F .486
(ails, the)-.1 F F1(&&)2.986 E F0 .486(operator f)2.986 F(ails.)-.1 E 1.736
(Otherwise, the right operand is e)122 692.4 R -.25(va)-.25 G 1.737
(luated, and).25 F F1(&&)4.237 E F0 -.1(fa)4.237 G 1.737
(ils if the right operand f).1 F 4.237(ails. If)-.1 F(either)4.237 E .861
(operand is the null string, the result is the other operand, e)122 704.4 R
-.15(ve)-.25 G 3.361(ni).15 G 3.361(ft)384.124 704.4 S .861
(hat operand is not a string.)393.595 704.4 R 1.526
(Otherwise, both operands are con)122 716.4 R -.15(ve)-.4 G 1.526
(rted to strings and the result is their concatenation.).15 F(An)6.527 E .511
(error results if either operand cannot be con)122 728.4 R -.15(ve)-.4 G .511
(rted to a string.).15 F .511(Note that if the operands of)5.511 F F1(&&)3.011
E EP
%%Page: 7 7
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-7-)282.17 48 Q(are predicates,)122 84 Q/F1 10
/Courier@0 SF(&&)2.5 E F0(can be used as a kind of logical conjunction.)2.5 E
F1(||)97 99.6 Q F0 .555(Logical disjunction.)122 99.6 R .555
(The left operand is e)5.555 F -.25(va)-.25 G .555
(luated \214rst; if it succeeds, its v).25 F .555(alue is the v)-.25 F .555
(alue of)-.25 F F1(||)122 111.6 Q F0 5(.O)C(therwise, the v)148.72 111.6 Q
(alue is that of the right operand.)-.25 E(If both operands f)5 E(ail,)-.1 E F1
(||)2.5 E F0 -.1(fa)2.5 G(ils.).1 E F1(|)97 127.2 Q F0 -.15(Pa)122 127.2 S
(ttern alternation.).15 E(See)5 E/F2 10/Times-Italic@0 SF(pattern matc)2.5 E
(hing)-.15 E F0(for details.)2.5 E F1(=)97 142.8 Q F0 2.5(Assignment. This)122
142.8 R(operator is right-associati)2.5 E -.15(ve)-.25 G(.).15 E F1(?)97 158.4
Q F0 -.15(Pa)122 158.4 S .244(ttern match operator).15 F 5.243(.T)-.55 G .243
(he left operand is con)226.731 158.4 R -.15(ve)-.4 G .243
(rted to a string and searched for the \214rst sub-).15 F .933
(string that matches the pattern gi)122 170.4 R -.15(ve)-.25 G 3.434(nb).15 G
3.434(yt)279.96 170.4 S .934(he right operand.)291.174 170.4 R .934
(If no such substring is found, the)5.934 F .061(operator f)122 182.4 R 2.561
(ails. If)-.1 F .061(the left operand is a v)2.561 F(ariable,)-.25 E F1(?)2.561
E F0 .06(may be used on the left side of an assignment.)2.561 F/F3 10
/Times-Bold@0 SF(Unary Operators)72 206.4 Q F0
(Unary operators bind more tightly than all binary operators.)97 222 Q F1 6(+-)
97 237.6 S F0 .261(Unary plus and minus.)1 F .261(The result is al)5.261 F -.1
(wa)-.1 G .261(ys numeric, so unary plus is sometimes used for type).1 F(con)
122 249.6 Q -.15(ve)-.4 G 3.375(rsion. Because).15 F .874
(unary operators bind so tightly)3.375 F 3.374(,e)-.65 G .874
(xpressions that look lik)346.18 249.6 R 3.374(en)-.1 G -2.25 -.15(eg a)454.576
249.6 T(ti).15 E 1.174 -.15(ve c)-.25 H(on-).15 E(stants beha)122 261.6 Q .3
-.15(ve t)-.2 H(hat w).15 E(ay for all practical purposes.)-.1 E F1(.)97 277.2
Q F0 .611(Name operator)122 277.2 R 5.611(.T)-.55 G .612
(he operand must be a v)195.982 277.2 R .612
(ariable; the result is essentially a pointer to the v)-.25 F(ari-)-.25 E .096
(able, similarly to the unary & operator in C.)122 289.2 R .095
(The result of applying the)5.096 F F1(DATATYPE)2.595 E F0 .095(function to)
2.595 F(the result of the)122 301.2 Q F1(.)2.5 E F0(operator is the string)2.5
E F1("NAME")2.5 E F0(.)A F1($)97 316.8 Q F0 2.717(Indirection. The)122 316.8 R
.217(operand is con)2.717 F -.15(ve)-.4 G .218
(rted to a name; the result is the object thus named.).15 F F1($)5.218 E F0(al)
2.718 E -.1(wa)-.1 G(ys).1 E(yields an lv)122 328.8 Q(alue.)-.25 E F1(?)97
344.4 Q F0(Query)122 344.4 Q 5.692(.I)-.65 G 3.192(fi)157.862 344.4 S .692
(ts operand f)167.164 344.4 R(ails,)-.1 E F1(?)3.191 E F0 -.1(fa)3.191 G 3.191
(ils. If).1 F .691(its operand succeeds,)3.191 F F1(?)3.191 E F0 .691
(yields a null string.)3.191 F .691(Useful for)5.691 F -.25(eva)122 356.4 S
(luating an e).25 E(xpression solely for its side ef)-.15 E(fects.)-.25 E F1(~)
97 372 Q F0(Logical ne)122 372 Q -.05(ga)-.15 G 2.5(tion. If).05 F
(its operand f)2.5 E(ails,)-.1 E F1(~)2.5 E F0(yields a null string.)2.5 E
(If the operand succeeds,)5 E F1(~)2.5 E F0 -.1(fa)2.5 G(ils.).1 E F1(&)97
387.6 Q F0 -2.15 -.25(Ke y)122 387.6 T -.1(wo).25 G 1.235(rd v).1 F 3.735
(alue. The)-.25 F 1.235
(operand must be the name of one of a restricted set of v)3.735 F 3.735
(ariables. The)-.25 F(lv)122 399.6 Q 1.151(alue result is a system v)-.25 F
1.151(ariable, whose v)-.25 F 1.151(alue af)-.25 F 1.151(fects the e)-.25 F
-.15(xe)-.15 G 1.15(cution of the program in some).15 F -.1(wa)122 411.6 S 3.8
-.65(y. S).1 H(ystem v).65 E(ariables are discussed separately)-.25 E(.)-.65 E
F1(@)97 427.2 Q F0 -.15(Pa)122 427.2 S(ttern cursor assignment.).15 E(See)5 E
F2(pattern matc)2.5 E(hing)-.15 E F0(for details.)2.5 E F1(*)97 442.8 Q F0 .835
(Deferred e)122 442.8 R -.25(va)-.25 G 3.335(luation. Returns).25 F 3.336(av)
3.336 G .836(alue of type)257.332 442.8 R F1(EXPRESSION)3.336 E F0 .836
(that contains all the information)3.336 F .7(necessary to e)122 454.8 R -.25
(va)-.25 G .7(luate the operand.).25 F .7(The operand is not actually e)5.7 F
-.25(va)-.25 G .7(luated at this time, b).25 F .7(ut can)-.2 F(be e)122 466.8 Q
-.25(va)-.25 G(luated later).25 E 2.5(,e)-.4 G(ither by the)201.07 466.8 Q F1
(EVAL)2.5 E F0(procedure or implicitly during pattern matching.)2.5 E F3
(Statements)72 490.8 Q F0 .634(Elements in brack)97 506.4 R .634
(ets are optional.)-.1 F .635(If the description of a statement is split o)
5.634 F -.15(ve)-.15 G 3.135(rm).15 G .635(ore than one line,)432.665 506.4 R
(the statement itself may be split analogously)72 518.4 Q 5(.S)-.65 G
(nocone does not ha)262.18 518.4 Q .3 -.15(ve a n)-.2 H(ull statement.).15 E F2
-.2(ex)108 548.4 S(pr).2 E(ession)-.37 E F0(The e)172 570 Q(xpression is e)-.15
E -.25(va)-.25 G(luated for its side ef).25 E 2.5(fects. The)-.25 F
(result, if an)2.5 E 1.3 -.65(y, i)-.15 H 2.5(sd).65 G(iscarded.)449.97 570 Q
F1(if \()108 603.6 Q F2 -.2(ex)C(pr).2 E(ession)-.37 E F1(\))A F2(statement1)
133 615.6 Q F1 6([e)108 627.6 S(lse)126 627.6 Q F2(statement2)133 639.6 Q F1(])
6 E F0 .678(The parenthesized)172 661.2 R F2 -.2(ex)3.178 G(pr).2 E(ession)-.37
E F0 .678(is e)3.178 F -.25(va)-.25 G 3.178(luated. If).25 F .678(it succeeds,)
3.178 F F2(statement1)3.178 E F0 .678(is e)3.178 F -.15(xe)-.15 G(cuted,).15 E
(otherwise)172 673.2 Q F2(statement2)2.5 E F0(is e)2.5 E -.15(xe)-.15 G(cuted.)
.15 E F1(while \()108 706.8 Q F2 -.2(ex)C(pr).2 E(ession)-.37 E F1(\))A F2
(statement)133 718.8 Q EP
%%Page: 8 8
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-8-)282.17 48 Q(Beha)172 84 Q -.15(ve)-.2 G 3.513(ss)
.15 G 1.014(imilarly to C: the)212.933 84 R/F1 10/Times-Italic@0 SF -.2(ex)
3.514 G(pr).2 E(ession)-.37 E F0 1.014(is e)3.514 F -.25(va)-.25 G 1.014
(luated, and if it succeeds, the).25 F F1(state-)3.514 E(ment)172 96 Q F0 1.453
(is e)3.954 F -.15(xe)-.15 G 1.453(cuted and control passes back to the be).15
F 1.453(ginning of the)-.15 F/F2 10/Courier@0 SF(while)3.953 E F0(state-)3.953
E 2.5(ment. Unlik)172 108 R 2.5(eC)-.1 G 2.5(,S)235.79 108 S(nocone has no)
246.35 108 Q F1(br)2.5 E(eak)-.37 E F0(or)2.5 E F1(continue)2.5 E F0
(statements.)2.5 E F2(do)108 141.6 Q F1(statement)133 153.6 Q F2(while \()108
165.6 Q F1 -.2(ex)C(pr).2 E(ession)-.37 E F2(\))A F0(Beha)172 187.2 Q -.15(ve)
-.2 G 2.674(ss).15 G .174(imilarly to C: the)212.094 187.2 R F1(statement)2.674
E F0 .174(is e)2.674 F -.15(xe)-.15 G .174(cuted, then the).15 F F1 -.2(ex)
2.674 G(pr).2 E(ession)-.37 E F0 .175(is e)2.675 F -.25(va)-.25 G(luated,).25 E
1.641(and if the)172 199.2 R F1 -.2(ex)4.141 G(pr).2 E(ession)-.37 E F0 1.641
(succeeds, control passes back to the be)4.141 F 1.64(ginning of the)-.15 F F2
(do)4.14 E F0(statement.)172 211.2 Q F2(for \()108 244.8 Q F1 -.2(ex)C(pr).2 E
(ession1)-.37 E F2(,)A F1 -.2(ex)6 G(pr).2 E(ession2)-.37 E F2(,)A F1 -.2(ex)6
G(pr).2 E(ession3)-.37 E F2(\))A F1(statement)133 256.8 Q F0(Equi)172 278.4 Q
-.25(va)-.25 G(lent to:).25 E F1 -.2(ex)208 296.4 S(pr).2 E(ession1)-.37 E F2
(while \()208 308.4 Q F1 -.2(ex)C(pr).2 E(ession3)-.37 E F2 6(\){)C F1
(statement)233 320.4 Q -.2(ex)233 332.4 S(pr).2 E(ession2)-.37 E F2(})208 344.4
Q({)108 384 Q F1(statement list)133 396 Q F2(})108 408 Q F0 2.948
(The statements in the list, which may contain zero or more statements, are)172
429.6 R -.15(exe)172 441.6 S(cuted in sequence.).15 E F1(label)108 475.2 Q F2
(:)A F1(statement)6 E F0 1.027(All labels are global \(because all)172 496.8 R
/F3 8/Times-Roman@0 SF(SNOBOL4)3.527 E F0 1.026(labels are global\), e)3.527 F
-.15(ve)-.25 G 3.526(na).15 G 1.026(cross proce-)454.384 496.8 R 1.792
(dure boundaries, so the)172 508.8 R 4.292(ym)-.15 G 1.792
(ust be chosen with care.)287.058 508.8 R 4.293(Au)6.792 G 1.793(seful con)
413.341 508.8 R -.15(ve)-.4 G 1.793(ntion is to).15 F(be)172 520.8 Q 1.905
(gin a label inside a procedure body with the name of the procedure and an)-.15
F(underscore.)172 532.8 Q F2(go to)108 566.4 Q F1(label)6 E F0 1.335
(The space between)172 588 R F2(go)3.835 E F0(and)3.835 E F2(to)3.835 E F0
1.335(is optional.)3.835 F 1.335(It is wise not to jump from a point)6.335 F
2.624(inside one procedure into another)172 600 R 7.624(.P)-.55 G 2.624
(rogram e)331.49 600 R -.15(xe)-.15 G 2.624(cution may be terminated by).15 F
2.871(jumping to the reserv)172 612 R 2.871(ed label)-.15 F F2(END)5.371 E F0
7.871(.L)C(abels)339.836 612 Q F2(RETURN)5.371 E F0(,)A F2(FRETURN)5.371 E F0
(,)A F2(NRETURN)5.372 E F0(,)A F2(ABORT)172 624 Q F0 2.5(,a)C(nd)211.44 624 Q
F2(CONTINUE)2.5 E F0(are also reserv)2.5 E(ed.)-.15 E F2(return [)108 657.6 Q
F1 -.2(ex)6 G(pr).2 E(ession)-.37 E F2(])6 E F0 1.09
(The current procedure returns to its caller)172 679.2 R 6.089(.I)-.55 G 3.589
(ft)355.966 679.2 S(he)365.665 679.2 Q F1 -.2(ex)3.589 G(pr).2 E(ession)-.37 E
F0 1.089(is gi)3.589 F -.15(ve)-.25 G 1.089(n, the proce-).15 F .827
(dure yields that v)172 691.2 R 3.327(alue. If)-.25 F(no)3.327 E F1 -.2(ex)
3.327 G(pr).2 E(ession)-.37 E F0 .827(is gi)3.327 F -.15(ve)-.25 G .827
(n, the v).15 F .828(alue returned is that of the)-.25 F -.25(va)172 703.2 S
.429(riable with the same name as the procedure; if that v).25 F .428
(ariable w)-.25 F .428(as not assigned in)-.1 F
(the procedure, the null string is returned.)172 715.2 Q EP
%%Page: 9 9
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-9-)282.17 48 Q/F1 10/Courier@0 SF(freturn)108 84 Q F0
(The current procedure returns and f)172 105.6 Q(ails.)-.1 E F1(nreturn [)108
139.2 Q/F2 10/Times-Italic@0 SF -.2(ex)6 G(pr).2 E(ession)-.37 E F1(])6 E F0
.224(The current procedure returns)172 160.8 R F1($\()2.724 E F2 -.2(ex)C(pr).2
E(ession)-.37 E F1(\))A F0 .224(as an lv)2.724 F 2.724(alue. If)-.25 F(the)
2.724 E F2 -.2(ex)2.724 G(pr).2 E(ession)-.37 E F0 .225(is not)2.725 F(gi)172
172.8 Q -.15(ve)-.25 G .769(n, the indirection is applied to the v).15 F .768
(ariable with the same name as the proce-)-.25 F 2.5(dure. An)172 184.8 R
(error results if this v)2.5 E(ariable w)-.25 E(as not gi)-.1 E -.15(ve)-.25 G
2.5(nav).15 G(alue inside the procedure.)391.79 184.8 Q/F3 10/Times-Bold@0 SF
(Pr)72 212.4 Q(ocedur)-.18 E(es)-.18 E F0(Here is an e)97 228 Q
(xample of a procedure declaration:)-.15 E F1(procedure gcd \(m, n\) {)108 246
Q(while \(m != n\) {)133 258 Q(if \(m > n\))158 270 Q 6(m=m%n)183 282 S(else)
158 294 Q 6(n=n%m)183 306 S(})133 318 Q(return m)133 330 Q(})108 342 Q F0(Ar)97
363.6 Q 1.619(guments are passed by v)-.18 F 1.619(alue, b)-.25 F 1.619
(ut note that the v)-.2 F 1.62(alue passed for an aggre)-.25 F -.05(ga)-.15 G
1.62(te ar).05 F 1.62(gument \(array)-.18 F(,)-.65 E
(table, or structure\) is really a pointer to the aggre)72 375.6 Q -.05(ga)-.15
G(te itself.).05 E .196(If a procedure is called with too fe)97 391.2 R 2.696
(wa)-.25 G -.18(rg)249.938 391.2 S .196(uments, e).18 F .196
(xtra null strings are supplied as necessary)-.15 F 5.195(.I)-.65 G 2.695(fc)
474.095 391.2 S(alled)484.56 391.2 Q(with too man)72 403.2 Q 2.5(ya)-.15 G -.18
(rg)136.57 403.2 S(uments, the e).18 E(xtras are quietly ignored.)-.15 E
(Local v)97 418.8 Q(ariables can be nominated for a procedure:)-.25 E F1
(procedure f\(x\) y, z {...)108 436.8 Q F0 .176(All v)72 454.8 R .176
(ariables are global, b)-.25 F .176(ut name scoping is dynamic.)-.2 F .177
(One w)5.177 F .177(ay to look at it is to imagine that when a pro-)-.1 F .581
(cedure is entered, all the v)72 466.8 R .581
(ariables de\214ned in that procedure are sa)-.25 F -.15(ve)-.2 G 3.081(da).15
G .581(nd set to null.)363.564 466.8 R .581(Those v)5.581 F .581(ariables are)
-.25 F(then restored when the procedure returns.)72 478.8 Q(Thus, the follo)97
494.4 Q(wing e)-.25 E(xample prints 5 and then 1:)-.15 E F1 6(a=1)108 512.4 S
(f\(\))108 524.4 Q(g\(\))108 536.4 Q(procedure f\(\) a {)108 560.4 Q 6(a=5)133
572.4 S(g\(\))133 584.4 Q(})108 596.4 Q(procedure g\(\) {)108 620.4 Q
(OUTPUT = a)133 632.4 Q(})108 644.4 Q F0(The follo)72 662.4 Q(wing e)-.25 E
(xample also prints 5 and then 1:)-.15 E EP
%%Page: 10 10
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-10-)279.67 48 Q/F1 10/Courier@0 SF 6(a=1)108 84 S 6
(b=.)108 96 S(a)138 96 Q(f\(\))108 108 Q(g\(\))108 120 Q(procedure f\(\) a {)
108 144 Q 6(a=5)133 156 S(g\(\))133 168 Q(})108 180 Q(procedure g\(\) {)108 204
Q(OUTPUT = $b)133 216 Q(})108 228 Q F0(Local v)72 246 Q
(ariables can only be associated with procedures.)-.25 E
(Procedures are recursi)5 E -.15(ve)-.25 G(.).15 E/F2 10/Times-Bold@0 SF
(Input-Output)72 270 Q F0 2.256(All I/O is done through `)97 285.6 R 2.256
(`associated v)-.74 F(ariables')-.25 E 4.756('. A)-.74 F -.25(va)4.756 G 2.256
(riable may be input-associated or output-).25 F .327(associated \(or both\).)
72 297.6 R(Whene)5.327 E -.15(ve)-.25 G 2.827(rav).15 G .327
(alue is assigned to an output-associated v)214.885 297.6 R .326
(ariable, that v)-.25 F .326(alue is automati-)-.25 F .187
(cally written in the \214le associated with that v)72 309.6 R 2.687
(ariable. Whene)-.25 F -.15(ve)-.25 G 2.687(rav).15 G .187
(alue is requested for an input-associated)342.825 309.6 R -.25(va)72 321.6 S
.685(riable, a line is read from the \214le associated with that v).25 F .685
(ariable, and the contents of the line are used for)-.25 F .846(the v)72 333.6
R 3.346(alue. When)-.25 F .846(the end of an input \214le is reached, an)3.346
F 3.346(ya)-.15 G .846(ttempts to access v)311.422 333.6 R .847
(ariables associated with that)-.25 F(\214le will f)72 345.6 Q(ail.)-.1 E
(Initially)97 361.2 Q 2.904(,t)-.65 G .403(he v)136.204 361.2 R(ariable)-.25 E
F1(OUTPUT)2.903 E F0 .403
(is output-associated with the standard output \214le, the v)2.903 F(ariable)
-.25 E F1(INPUT)2.903 E F0 1.655
(is input-associated with the standard input \214le, and the v)72 373.2 R
(ariable)-.25 E F1(TERMINAL)4.155 E F0 1.656(is both input- and output-)4.156 F
(associated with the user')72 385.2 Q 2.5(st)-.55 G(erminal.)179.21 385.2 Q
(Thus, the follo)97 400.8 Q(wing program copies its standard input to its stan\
dard output, a line at a time:)-.25 E F1(while \(OUTPUT = INPUT\) {})108 418.8
Q F0(Ne)97 440.4 Q 2.5(wa)-.25 G(ssociations are formed by the)122.57 440.4 Q
F1(INPUT)2.5 E F0(and)2.5 E F1(OUTPUT)2.5 E F0(procedures:)2.5 E F1 6(INPUT \()
108 458.4 R/F3 10/Times-Italic@0 SF(name)A F1(,)A F3 -.15(ch)6 G(annel).15 E F1
(,)A F3(\214le)6 E F1(\))A(OUTPUT \()108 470.4 Q F3(name)A F1(,)A F3 -.15(ch)6
G(annel).15 E F1(,)A F3(\214le)6 E F1(\))A F0 .406(In both cases,)72 488.4 R F3
(name)2.906 E F0 .406(is the name of the v)2.906 F .406
(ariable to be associated \(the name of the v)-.25 F(ariable)-.25 E F3(x)2.906
E F0(is)2.906 E F1(.x)2.906 E F0 .405(\), and)B F3(\214le)2.905 E F0 .892
(is the \214le to be used.)72 500.4 R F3(Channel)5.892 E F0 .892(is a string t\
hat you will use to identify subsequent operations on that \214le.)3.392 F
(Internally)72 512.4 Q 2.5(,t)-.65 G(here is a one-to-one correspondence betwe\
en channel names and \214le descriptors.)118.01 512.4 Q 1.057(The \214le ar)97
528 R 1.057(gument must not be gi)-.18 F -.15(ve)-.25 G 3.556(nf).15 G 1.056
(or other than the \214rst call to)254.638 528 R F1(INPUT)3.556 E F0(or)3.556 E
F1(OUTPUT)3.556 E F0 1.056(on a gi)3.556 F -.15(ve)-.25 G(n).15 E
(channel, as a channel can only be connected to a single \214le.)72 540 Q
(Other procedures dealing with input-output are:)97 555.6 Q F1(SET \()108 585.6
Q F3 -.15(ch)C(annel).15 E F1(,)A F3(of)6 E(fset)-.18 E F1(,)A F3(whence)6 E F1
(\))A F0 2.543
(This function repositions the \214le speci\214ed by its \214rst ar)172 607.2 R
2.544(gument in a system-)-.18 F .086(dependent manner)172 619.2 R 5.086(.I)
-.55 G 2.586(ni)256.042 619.2 S .086(mplementations running under the)266.408
619.2 R/F4 8/Times-Roman@0 SF(UNIX)2.586 E F0 .085(system, the beha)2.586 F(v-)
-.2 E(ior is similar to the)172 631.2 Q F3(lseek)2.5 E F0(system call.)2.5 E F1
(REWIND \()108 664.8 Q F3 -.15(ch)C(annel).15 E F1(\))A F0
(Repositions the named channel to the be)172 686.4 Q(ginning of the \214le.)
-.15 E EP
%%Page: 11 11
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-11-)279.67 48 Q/F1 10/Courier@0 SF(ENDFILE \()108 84 Q
/F2 10/Times-Italic@0 SF -.15(ch)C(annel).15 E F1(\))A F0 2.292
(Indicates that you are done using the gi)172 105.6 R -.15(ve)-.25 G 4.792(nc)
.15 G 4.792(hannel. All)368.234 105.6 R -.25(va)4.792 G 2.292
(riables associated).25 F .547
(through that channel are disassociated, output b)172 117.6 R(uf)-.2 E .547
(fers are \215ushed \(if an)-.25 F .546(y\), and the)-.15 F(\214le is closed.)
172 129.6 Q F1(DETACH \()108 163.2 Q F2(name)A F1(\))A F0 .204
(Disassociates the named v)172 184.8 R 2.704(ariable. Does)-.25 F .204
(not close the \214le: a later call to)2.704 F F1(INPUT)2.705 E F0(or)2.705 E
F1(OUTPUT)172 196.8 Q F0(can reassociate it.)2.5 E/F3 10/Times-Bold@0 SF -.1
(Pa)72 224.4 S(tter).1 E 2.5(nM)-.15 G(atching)115.9 224.4 Q F0(A)97 240 Q F2
(pattern)3.655 E F0 1.155
(is a data structure that describes a class of strings.)3.655 F -.15(Pa)6.155 G
1.155(tterns are used by the).15 F F1(?)3.655 E F0(operator)3.655 E(,)-.4 E
.609(which determines if the string gi)72 252 R -.15(ve)-.25 G 3.109(na).15 G
3.109(si)226.344 252 S .61
(ts left operand contains a substring described by the pattern gi)236.123 252 R
-.15(ve)-.25 G(n).15 E .547(as its right operand.)72 264 R .547
(The part of the Snocone system that does this is called the)5.547 F F2
(scanner)3.046 E F0 5.546(.T)C .546(he input to the)444.862 264 R
(scanner is the string to be searched, called the)72 276 Q F2(subject)2.5 E F0
2.5(,a)C(nd the pattern sought.)295.28 276 Q .102(The scanner tries to \214nd \
a substring of the subject that is matched by the pattern.)97 291.6 R .102
(It \214rst looks at sub-)5.102 F .213
(strings starting at the \214rst character of the subject.)72 303.6 R .212
(If it doesn')5.212 F 2.712<748c>-.18 G .212
(nd one, it tries the ones starting at the sec-)333.782 303.6 R 1.336
(ond subject character)72 315.6 R 3.836(,a)-.4 G 1.336(nd so on.)170.018 315.6
R 1.336
(If the scanner cannot \214nd an appropriate substring, the pattern match)6.336
F -.1(fa)72 327.6 S(ils.).1 E .312(If the)97 343.2 R F1(&ANCHOR)2.812 E F0 .311
(system v)2.812 F .311(ariable is nonzero, the scanner only looks at substring\
s that start at the \214rst)-.25 F .788(character of the subject.)72 355.2 R
.788(This is said to be an)5.788 F F2(anc)3.288 E(hor)-.15 E(ed)-.37 E F0 .788
(pattern match.)3.288 F(The)5.789 E F1(&ANCHOR)3.289 E F0 -.25(va)3.289 G .789
(riable is zero at).25 F(the start of program e)72 367.2 Q -.15(xe)-.15 G
(cution.).15 E .704(The important part of pattern matching is therefore determ\
ining whether the subject contains a sub-)97 382.8 R .206
(string that starts at a gi)72 394.8 R -.15(ve)-.25 G 2.706(nc).15 G .206
(haracter and matches a gi)185.046 394.8 R -.15(ve)-.25 G 2.706(np).15 G 2.706
(attern. T)309.246 394.8 R 2.706(ou)-.8 G .207(nderstand ho)357.738 394.8 R
2.707(wt)-.25 G .207(his is done, we must)421.782 394.8 R(tak)72 406.8 Q 2.5
(eac)-.1 G(loser look at patterns.)102.44 406.8 Q(Ev)97 422.4 Q .852
(ery pattern is a concatenation of one or more)-.15 F F2(elements)3.352 E F0
3.352(,e)C .852(ach of which has zero or more)342.25 422.4 R F2(alterna-)3.351
E(tives)72 434.4 Q F0 5.032(.E)C .032(ach alternati)103.972 434.4 R .333 -.15
(ve m)-.25 H .033(ay itself be an arbitrarily complicated pattern.).15 F .033
(Some patterns ha)5.033 F .333 -.15(ve a)-.2 H(lternati).15 E -.15(ve)-.25 G
2.533(st).15 G(hat)491.78 434.4 Q(are determined dynamically as the)72 446.4 Q
2.5(ya)-.15 G(re needed during pattern matching.)220.98 446.4 Q .744(If a patt\
ern has only one element, the scanner determines if it matches at a gi)97 462 R
-.15(ve)-.25 G 3.243(np).15 G .743(oint by trying to)437.041 462 R 1.051
(match each of the pattern')72 474 R 3.551(sa)-.55 G(lternati)191.945 474 Q
-.15(ve)-.25 G 3.551(sa).15 G 3.551(tt)241.196 474 S 1.051(hat point.)250.307
474 R 1.051(If no alternati)6.051 F 1.351 -.15(ve m)-.25 H 1.052
(atches at that point, the element).15 F(cannot be matched.)72 486 Q .245
(If the pattern has more than one element, matching that pattern at a gi)97
501.6 R -.15(ve)-.25 G 2.745(np).15 G .245(oint means: \(a\) \214nding an)
400.25 501.6 R(alternati)72 513.6 Q 1.284 -.15(ve f)-.25 H .985(or the \214rst\
 element of the pattern that matches a subject substring starting at the gi).15
F -.15(ve)-.25 G 3.485(np).15 G(oint,)485.94 513.6 Q .609
(and that also \(b\) allo)72 525.6 R .609(ws the remaining elements of the pat\
tern to match a substring that starts immediately)-.25 F
(after the substring matched in \(a\).)72 537.6 Q .332
(During pattern matching, the scanner k)97 553.2 R .332
(eeps its place by means of an internal v)-.1 F .332(alue called the)-.25 F F2
(cur)2.832 E(sor)-.1 E F0(,)A .087(which represents the number of characters i\
n the subject that precede the current location.)72 565.2 R .086
(These characters)5.086 F 1.163(are counted from the be)72 577.2 R 1.164
(ginning of the subject e)-.15 F -.15(ve)-.25 G 3.664(nw).15 G 1.164
(hen the scanner is trying to match a substring that)294.934 577.2 R
(starts at some other place in the subject.)72 589.2 Q .306
(The concatenation of tw)97 604.8 R 2.806(op)-.1 G(atterns)207.544 604.8 Q F1
(P1)2.806 E F0(and)2.806 E F1(P2)2.806 E F0 .305
(is a pattern whose elements are)2.806 F F1(P1)2.805 E F0(and)2.805 E F1(P2)
2.805 E F0 5.305(.T)C .305(he alter)470.855 604.8 R(-)-.2 E .036
(nation operator)72 616.8 R F1(|)2.536 E F0 .036
(similarly constructs alternati)2.536 F -.15(ve)-.25 G 2.536(s. When).15 F
2.536(as)2.536 G .037(tring is used as a pattern, it matches only itself.)
315.628 616.8 R(Thus,)72 628.8 Q F1("a" | "e" | "i" | "o" | "u")108 646.8 Q F0
(is a pattern that matches an)72 664.8 Q 2.5(yl)-.15 G -.25(ow)190.72 664.8 S
(er).25 E(-case v)-.2 E -.25(ow)-.2 G(el.).25 E(Consider the follo)97 680.4 Q
(wing statement:)-.25 E F1(P1 = \("ab" | "a"\) && \("b" | "c"\))108 698.4 Q F0
1.804(This assigns to)72 716.4 R F1(P)4.304 E F0 4.303(ap)4.303 G 1.803
(attern with tw)163.408 716.4 R 4.303(oe)-.1 G 4.303(lements. The)236.207 716.4
R 1.803(\214rst one matches either)4.303 F F1(ab)4.303 E F0(or)4.303 E F1(a)
4.303 E F0 4.303(,a)C 1.803(nd the second)445.404 716.4 R(matches either)72
728.4 Q F1(b)2.5 E F0(or)2.5 E F1(c)2.5 E F0 5(.L)C(ook at:)171.48 728.4 Q EP
%%Page: 12 12
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-12-)279.67 48 Q/F1 10/Courier@0 SF("ab" ? P1)108 84 Q
F0 .477(The scanner \214rst tries the \214rst alternati)72 102 R .777 -.15
(ve o)-.25 H 2.977(ft).15 G .478(he \214rst element of P1 by matching)255.386
102 R F1(ab)2.978 E F0 .478(in the subject with)2.978 F F1(ab)2.978 E F0 .523
(in the pattern.)72 114 R .523(This alternati)5.523 F .823 -.15(ve m)-.25 H
.523(atches, so the element \().15 F F1("ab"|"a")A F0 3.022(\)m)C .522
(atches, and the scanner goes on to)365.068 114 R 1.078(the second element \()
72 126 R F1("b"|"c")A F0 3.579(\). Here,)B 1.079
(it will be unsuccessful in matching both)3.579 F F1(b)3.579 E F0(and)3.579 E
F1(c)3.579 E F0 3.579(,b)C 1.079(ecause it has)451.302 126 R .678(already e)72
138 R .678(xhausted all the characters of the subject.)-.15 F .678
(Thus the scanner f)5.678 F .677(ails to match the second element of)-.1 F F1
(P1)72 150 Q F0 3.069(,a)C .569
(nd must back up and rematch the \214rst element.)94.009 150 R -.15(Fo)5.569 G
(rtunately).15 E 3.07(,t)-.65 G .57(he \214rst element has an alternati)344.71
150 R .87 -.15(ve i)-.25 H(n).15 E F1(a)3.07 E F0(;)A .557
(this matches, and no)72 162 R 3.057(wt)-.25 G .557
(he scanner can try to match the second element \()168.139 162 R F1("b"|"c")A
F0 3.057(\)a)C -.05(ga)420.649 162 S 3.057(in. The).05 F .557(\214rst alter)
3.057 F(-)-.2 E(nati)72 174 Q .31 -.15(ve \()-.25 H F1(b).15 E F0 2.51(\)s)C
.01(ucceeds, so the)117.61 174 R F1(?)2.51 E F0 .01
(operator therefore succeeds.)2.51 F .011(If we w)5.011 F .011(anted to e)-.1 F
.011(xamine just ho)-.15 F 2.511(wt)-.25 G .011(he pattern ele-)446.778 174 R
(ments matched, we could ha)72 186 Q .3 -.15(ve w)-.2 H(ritten:).15 E F1
(P1a = \("ab" | "a"\) . OUTPUT && \("b" | "c"\) . OUTPUT)108 204 Q("ab" ? P1a)
108 216 Q F0 .118(This w)72 234 R .118(ould print)-.1 F F1(a)2.618 E F0(and)
2.618 E F1(b)2.618 E F0 .118(on separate lines, sho)2.618 F .118(wing that)-.25
F F1("ab"|"a")2.618 E F0(matched)2.617 E F1(a)2.617 E F0(and)2.617 E F1
("b"|"c")2.617 E F0(matched)2.617 E F1(b)2.617 E F0(.)A .72(When an)97 249.6 R
3.22(yp)-.15 G .721(attern is \214rst encountered during pattern matching, it \
will match some string, and when)146.61 249.6 R 1.201
(the scanner backs into it, it may match some other string.)72 261.6 R 1.2
(Because man)6.2 F 3.7(yp)-.15 G 1.2(atterns beha)386.31 261.6 R 1.5 -.15(ve d)
-.2 H(if).15 E 1.2(ferently on)-.25 F
(their initial match than when rematched, it is useful to describe the tw)72
273.6 Q 2.5(oc)-.1 G(ases separately)362.97 273.6 Q(.)-.65 E -.15(Fo)97 289.2 S
3.147(ri).15 G .648
(nstance, when a string is used as a pattern, it initially matches itself.)
116.667 289.2 R .648(If the scanner later backs)5.648 F(into it, it f)72 301.2
Q(ails.)-.1 E .022(As another e)97 316.8 R .022(xample, consider)-.15 F F1
(P1|P2)2.522 E F0 5.022(.T)C .022(his pattern matches e)261.93 316.8 R -.15(ve)
-.25 G .022(ry possibility for).15 F F1(P1)2.522 E F0 2.522(,a)C .022
(nd when it has)445.884 316.8 R -.15(ex)72 328.8 S(hausted).15 E F1(P1)2.5 E F0
2.5(,t)C(hen matches e)134.12 328.8 Q -.15(ve)-.25 G(ry possibility for).15 E
F1(P2)2.5 E F0(before \214nally f)2.5 E(ailing.)-.1 E -.4(Wi)97 344.4 S 1.877
(th this in mind, we can describe the v).4 F 1.877
(arious pattern-matching operators, procedures, and pre-)-.25 F(de\214ned v)72
356.4 Q(ariables:)-.25 E F1(P1 && P2)72 372 Q F0 -.35(Tr)172 372 S .84
(ies to match).35 F F1(P1)3.34 E F0 3.34(,f)C .84(ails if it can')255.51 372 R
3.339(t. Then)-.18 F .839(tries to match)3.339 F F1(P2)3.339 E F0 5.839(.I)C(f)
426.254 372 Q F1(P2)3.339 E F0 -.1(fa)3.339 G .839(ils, tries the).1 F(ne)172
384 Q .912(xt alternati)-.15 F 1.212 -.15(ve f)-.25 H(or).15 E F1(P1)3.413 E F0
3.413(,a)C .913(nd then tries)275.13 384 R F1(P2)3.413 E F0(ag)3.413 E 3.413
(ain. Ev)-.05 F(entually)-.15 E 3.413(,i)-.65 G 3.413(te)426.468 384 S .913
(ither runs out of)437.101 384 R(alternati)172 396 Q -.15(ve)-.25 G 3.586(sf)
.15 G(or)224.616 396 Q F1(P1)3.586 E F0 3.586(,i)C 3.586(nw)257.398 396 S 1.086
(hich case)273.204 396 R F1(P1&&P2)3.585 E F0 -.1(fa)3.585 G 1.085
(ils, or it \214nds alternati).1 F -.15(ve)-.25 G 3.585(sf).15 G 1.085(or both)
474.305 396 R F1(P1)172 408 Q F0(and)2.5 E F1(P2)2.5 E F0(which allo)2.5 E 2.5
(wt)-.25 G(hem to match.)272.13 408 Q F1(P1 | P2)72 423.6 Q F0 -.35(Tr)172
423.6 S .593(ies to match).35 F F1(P1)3.094 E F0 5.594(.I)C 3.094(fs)257.124
423.6 S(uccessful,)267.438 423.6 Q F1(P1|P2)3.094 E F0 .594
(matches the string that w)3.094 F .594(as matched by)-.1 F F1(P1)172 435.6 Q
F0 5(.O)C(therwise, matches whate)198.72 435.6 Q -.15(ve)-.25 G(r).15 E F1(P2)
2.5 E F0(matches, and f)2.5 E(ails if)-.1 E F1(P2)2.5 E F0 -.1(fa)2.5 G(ils.).1
E F1 6(P$V)72 451.2 S F0 -.35(Tr)172 451.2 S .576(ies to match).35 F F1(P)3.076
E F0 5.576(.I)C(f)251.054 451.2 Q F1(P)3.076 E F0 .576(matches, a cop)3.076 F
3.076(yo)-.1 G 3.076(ft)339.814 451.2 S .575(he substring matched by)349 451.2
R F1(P)3.075 E F0 .575(is immedi-)3.075 F(ately assigned to the v)172 463.2 Q
(ariable)-.25 E F1(V)2.5 E F0(.)A F1 6(P.V)72 478.8 S F0 -.35(Tr)172 478.8 S
.196(ies to match).35 F F1(P)2.696 E F0 5.196(.I)C 2.696(ft)249.534 478.8 S
.197(he entire pattern match of which this element is a part is ulti-)258.34
478.8 R .492(mately successful, a cop)172 490.8 R 2.992(yo)-.1 G 2.992(ft)
283.568 490.8 S .491(he substring matched by)292.67 490.8 R F1(P)2.991 E F0
.491(is assigned to)2.991 F F1(V)2.991 E F0 .491(after the)2.991 F
(entire match completes.)172 502.8 Q F1(@N)72 518.4 Q F0 .986
(Matches a null string, and immediately assigns cursor position to the v)172
518.4 R(ariable)-.25 E F1(N)3.486 E F0(.)A .504(The cursor position is the num\
ber of characters that precede this null string in the)172 530.4 R
(subject of the entire pattern match.)172 542.4 Q(Thus:)5 E F1
("abcde" ? @OUTPUT && "c")208 560.4 Q F0(prints)172 578.4 Q F1(0)2.5 E F0(,)A
F1(1)2.5 E F0 2.5(,a)C(nd)223.72 578.4 Q F1(2)2.5 E F0(on separate lines.)2.5 E
F1(ABORT)72 594 Q F0(The entire pattern match is aborted.)172 594 Q F1(ARB)72
609.6 Q F0 3.336(Ap)172 609.6 S .836(re-de\214ned v)187.556 609.6 R .836
(ariable that matches an)-.25 F .836(ything at all.)-.15 F .837
(More speci\214cally)5.837 F 3.337(,i)-.65 G 3.337(ti)466.763 609.6 S(nitially)
475.66 609.6 Q 2.24(matches the null string.)172 621.6 R 2.24(When back)7.24 F
2.24(ed into, it matches a string one character)-.1 F
(longer than the one it matched last time.)172 633.6 Q F1(BAL)72 649.2 Q F0
4.733(Ap)172 649.2 S 2.233(re-de\214ned v)188.953 649.2 R 2.233
(ariable that matches a non-empty parenthesis- balanced string.)-.25 F .097
(This string is balanced only with respect to parentheses, and not an)172 661.2
R 2.597(yo)-.15 G .097(ther kinds of)453.256 661.2 R(brack)172 673.2 Q(ets.)-.1
E F1(FAIL)72 688.8 Q F0 3.234(Ap)172 688.8 S .734(re-de\214ned v)187.454 688.8
R .734(ariable that al)-.25 F -.1(wa)-.1 G .734(ys f).1 F .735(ails to match.)
-.1 F .735(It is sometimes useful to force)5.735 F
(the scanner to try all alternati)172 700.8 Q -.15(ve)-.25 G 2.5(sf).15 G
(or a pattern.)307.68 700.8 Q -.15(Fo)5 G 2.5(ri).15 G(nstance:)379.74 700.8 Q
F1 6(sA)208 718.8 S(RB $ OUTPUT && FAIL)226 718.8 Q EP
%%Page: 13 13
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-13-)279.67 48 Q(prints all substrings of)172 84 Q/F1
10/Courier@0 SF(s)2.5 E F0(.)A F1(FENCE)72 99.6 Q F0 .636
(Initially matches the null string, b)172 99.6 R .636
(ut if the scanner backs into it, the entire pattern)-.2 F(match is aborted.)
172 111.6 Q(Identical to to)5 E F1(""|ABORT)2.5 E F0(.)A F1(REM)72 127.2 Q F0
3.735(Matches from the current position to the end of the subject.)172 127.2 R
3.735(Identical to)8.735 F F1(RTAB\(0\))172 139.2 Q F0(.)A F1(SUCCEED)72 154.8
Q F0(Identical to)172 154.8 Q F1(ARBNO\(""\))2.5 E(ANY\(s\))72 170.4 Q F0
(Matches an)172 170.4 Q 2.5(ys)-.15 G(ingle character in)229.06 170.4 Q F1(s)
2.5 E F0(.)A F1(ARBNO\(p\))72 186 Q F0 3.11(Ap)172 186 S .609(re-de\214ned pro\
cedure that yields a pattern that matches zero or more copies of)187.33 186 R
.742(the pattern)172 198 R F1(p)3.242 E F0 5.742(.I)C .742
(nitially matches the null string.)236.046 198 R .743
(Each time the scanner backs into)5.742 F .553(it, it tries to e)172 210 R .553
(xtend the substring already matched by matching one more instance)-.15 F(of)
172 222 Q F1(p)2.5 E F0(.)A F1(BREAK\(s\))72 237.6 Q F0 1.121
(Matches a string starting at the current position up to b)172 237.6 R 1.122
(ut not including the ne)-.2 F(xt)-.15 E .093
(character in the subject that is also found some)172 249.6 R .093(where in)
-.25 F F1(s)2.593 E F0 5.092(.F)C .092(ailure if no such char)416.082 249.6 R
(-)-.2 E(acter is found.)172 261.6 Q(No alternati)5 E -.15(ve)-.25 G(s.).15 E
F1(BREAKX\(s\))72 277.2 Q F0(Lik)172 277.2 Q(e)-.1 E F1(BREAK)3.558 E F0 3.558
(,b)C 1.058(ut if back)234.646 277.2 R 1.059(ed into, it matches up to the ne)
-.1 F 1.059(xt subject character also)-.15 F(found in)172 289.2 Q F1(s)2.5 E F0
2.5(,a)C(nd so on.)223.55 289.2 Q F1(LEN\(n\))72 304.8 Q F0(Matches e)172 304.8
Q(xactly)-.15 E F1(n)2.5 E F0(characters.)2.5 E F1(NOTANY\(s\))72 320.4 Q F0
(Matches an)172 320.4 Q 2.5(ys)-.15 G(ingle character not in)229.06 320.4 Q F1
(s)2.5 E F0(.)A F1(POS\(n\))72 336 Q F0 .57(If e)172 336 R(xactly)-.15 E F1(n)
3.07 E F0 .57(subject characters precede the current position,)3.07 F F1(POS)
3.07 E F0 .57(matches the null)3.07 F 2.5(string. Otherwise)172 348 R(it f)2.5
E(ails.)-.1 E F1(RPOS\(n\))72 363.6 Q F0 2.152(If e)172 363.6 R(xactly)-.15 E
F1(n)4.652 E F0 2.152(subject characters remain to be matched,)4.652 F F1(RPOS)
4.653 E F0 2.153(matches the null)4.653 F 2.5(string. Otherwise)172 375.6 R
(it f)2.5 E(ails.)-.1 E F1(RTAB\(n\))72 391.2 Q F0 1.586(If at least)172 391.2
R F1(n)4.086 E F0 1.586(subject characters remain in the subject,)4.086 F F1
(RTAB)4.086 E F0 1.585(matches characters)4.085 F(until e)172 403.2 Q(xactly)
-.15 E F1(n)2.5 E F0 2.5(remain. Otherwise)2.5 F(it f)2.5 E(ails.)-.1 E F1
(SPAN\(s\))72 418.8 Q F0 .169(Starting at the current position, matches as man)
172 418.8 R 2.669(yc)-.15 G .169(haracters as possible tak)375.122 418.8 R .17
(en from)-.1 F F1(s)172 430.8 Q F0(.)A F1 58(TAB\(n\) TAB)72 446.4 R F0 .664
(matches from the current position forw)3.164 F .664
(ard up to and including the)-.1 F F1(n)3.163 E F0 .663(th char)B(-)-.2 E .857
(acter of the subject.)172 458.4 R .858(If more than)5.858 F F1(n)3.358 E F0
.858(characters ha)3.358 F 1.158 -.15(ve a)-.2 H .858
(lready been matched in the).15 F(subject string,)172 470.4 Q F1(TAB)2.5 E F0
-.1(fa)2.5 G(ils.).1 E .656(All pattern-v)97 486 R .656
(alued procedures can tak)-.25 F 3.156(ea)-.1 G 3.156(nu)261.82 486 S(ne)
274.976 486 Q -.25(va)-.25 G .656(luated e).25 F .656(xpression as ar)-.15 F
3.156(gument. The)-.18 F -.15(ex)3.155 G .655(pression will).15 F(be e)72 498 Q
-.25(va)-.25 G(luated when the pattern element is matched.).25 E/F2 10
/Times-Bold@0 SF(System V)72 522 Q(ariables)-.92 E F0(The)97 537.6 Q F1(&)3.249
E F0 .749(operator looks at the name of its operand, not its v)3.249 F 3.25
(alue. F)-.25 F .75(or each of a small set of names,)-.15 F F1(&)3.25 E F0 .973
(yields a)72 549.6 R/F3 10/Times-Italic@0 SF .973(system variable)3.473 F F0
3.473(,w)C .973(hose v)183.932 549.6 R .973(alue af)-.25 F .972
(fects the operation of the system in some w)-.25 F(ay)-.1 E 5.972(.F)-.65 G
.972(or instance, we)441.796 549.6 R(ha)72 561.6 Q 1.264 -.15(ve a)-.2 H .964
(lready seen).15 F F1(&ANCHOR)3.464 E F0 3.464(,w)C .964
(hich controls whether or not the scanner is restricted to e)203.306 561.6 R
.964(xamining initial)-.15 F(substrings of the subject.)72 573.6 Q
(The complete list of system v)5 E(ariables is:)-.25 E F1(&ABORT)72 589.2 Q F0
(The same v)172 589.2 Q(alue as the pre-de\214ned v)-.25 E(ariable)-.25 E F1
(ABORT)2.5 E F0(.)A F1(&ALPHABET)72 604.8 Q F0 3.991(As)172 604.8 S 1.491
(tring that contains all the characters of the machine')187.101 604.8 R 3.991
(sc)-.55 G 1.49(ollating sequence, in)418.53 604.8 R(order)172 616.8 Q(.)-.55 E
F1(&ANCHOR)72 632.4 Q F0
(If zero, all pattern matches are unanchored, otherwise the)172 632.4 Q 2.5(ya)
-.15 G(re anchored.)413.16 632.4 Q F1(&ARB)72 648 Q F0(The same v)172 648 Q
(alue as the pre-de\214ned v)-.25 E(ariable)-.25 E F1(ARB)2.5 E F0(.)A F1(&BAL)
72 663.6 Q F0(The same v)172 663.6 Q(alue as the pre-de\214ned v)-.25 E
(ariable)-.25 E F1(BAL)2.5 E F0(.)A F1(&CODE)72 679.2 Q F0 .857(This v)172
679.2 R .857(ariable is initially zero.)-.25 F .858(Its v)5.858 F .858
(alue is returned to the operating system when)-.25 F(the program \214nishes e)
172 691.2 Q -.15(xe)-.15 G(cuting.).15 E F1(&DUMP)72 706.8 Q F0 .985(This v)172
706.8 R .984(ariable is initially zero.)-.25 F .984(If it is 1 at the end of e)
5.984 F -.15(xe)-.15 G .984(cution, the v).15 F .984(alues of all)-.25 F -.25
(va)172 718.8 S .104(riables are printed.).25 F .104(If it is 2, the v)5.104 F
.104(alues of all array)-.25 F 2.604(,t)-.65 G .104
(able, and structure elements)392.048 718.8 R(are also printed.)172 730.8 Q EP
%%Page: 14 14
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-14-)279.67 48 Q/F1 10/Courier@0 SF(&FAIL)72 84 Q F0
(The same v)172 84 Q(alue as the pre-de\214ned v)-.25 E(ariable)-.25 E F1(FAIL)
2.5 E F0(.)A F1(&FENCE)72 99.6 Q F0(The same v)172 99.6 Q
(alue as the pre-de\214ned v)-.25 E(ariable)-.25 E F1(FENCE)2.5 E F0(.)A F1
(&FNCLEVEL)72 115.2 Q F0(The current le)172 115.2 Q -.15(ve)-.25 G 2.5(lo).15 G
2.5(fp)247.41 115.2 S(rocedure nesting.)258.24 115.2 Q F1(&INPUT)72 130.8 Q F0
(If this v)172 130.8 Q
(ariable is set to 0, all input association is suspended.)-.25 E F1(&MAXLNGTH)
72 146.4 Q F0 .209(The maximum length of a string.)172 146.4 R .208(This v)
5.209 F .208(alue cannot be increased be)-.25 F .208(yond its initial)-.15 F
-.25(va)172 158.4 S(lue.).25 E F1(&OUTPUT)72 174 Q F0(If this v)172 174 Q
(ariable is set to 0, all output is suppressed until it is ag)-.25 E
(ain set nonzero.)-.05 E F1(&REM)72 189.6 Q F0(The same v)172 189.6 Q
(alue as the pre-de\214ned v)-.25 E(ariable)-.25 E F1(REM)2.5 E F0(.)A F1
(&STCOUNT)72 205.2 Q F0 3.238(Ac)172 205.2 S .738(ount of ho)186.898 205.2 R
3.238(wm)-.25 G(an)247.472 205.2 Q 3.238(ys)-.15 G .738(tatements ha)268.89
205.2 R 1.038 -.15(ve b)-.2 H .739(een e).15 F -.15(xe)-.15 G .739(cuted so f)
.15 F(ar)-.1 E 5.739(.B)-.55 G .739(ecause this counts)430.312 205.2 R/F2 8
/Times-Roman@0 SF(SNOBOL4)172 217.2 Q F0 .047
(statements, not Snocone statements, it should be considered only approx-)2.547
F(imate.)172 229.2 Q F1(&STLIMIT)72 244.8 Q F0(When)172 244.8 Q F1(&STCOUNT)
2.851 E F0 .351(reaches this v)2.851 F .351(alue, e)-.25 F -.15(xe)-.15 G .351
(cution terminates with an error message.).15 F .029
(It is initially 50000, and may be set freely)172 256.8 R 5.028(.I)-.65 G 2.528
(fi)349.366 256.8 S 2.528(ti)358.004 256.8 S 2.528(ss)366.092 256.8 S .028
(et to a ne)376.4 256.8 R -.05(ga)-.15 G(ti).05 E .328 -.15(ve v)-.25 H .028
(alue, statement)-.1 F(counting is disabled.)172 268.8 Q F1(&SUCCEED)72 284.4 Q
F0(The same v)172 284.4 Q(alue as the pre-de\214ned v)-.25 E(ariable)-.25 E F1
(SUCCEED)2.5 E F0(.)A/F3 10/Times-Bold@0 SF(Examples)72 308.4 Q(Hello W)72
332.4 Q(orld)-.75 E F0(This is the canonical sample program:)97 348 Q F1
(OUTPUT = "Hello world!")108 366 Q F0 1.967
(The present implementation of Snocone is case-insensiti)72 384 R 2.267 -.15
(ve i)-.25 H 4.467(ni).15 G 1.967(denti\214ers, b)337.865 384 R 1.967
(ut future v)-.2 F 1.967(ersions may well)-.15 F .309(become case-sensiti)72
396 R -.15(ve)-.25 G 5.309(.I).15 G 2.809(fs)172.188 396 S .308(o, it is lik)
182.217 396 R .308(ely that pre-de\214ned names, such as)-.1 F F1(INPUT)2.808 E
F0(and)2.808 E F1(OUTPUT)2.808 E F0 2.808(,w)C .308(ill ha)463.734 396 R .608
-.15(ve t)-.2 H(o).15 E(be written in upper case.)72 408 Q -2.15 -.25(Ke y)5 H
-.1(wo).25 G(rds, such as).1 E F1(if)2.5 E F0(and)2.5 E F1(while)2.5 E F0 2.5
(,w)C(ill be written in lo)325.95 408 Q(wer case.)-.25 E F3 -.92(To)72 432 S
(pological Sorting).92 E F0 1.646 -.8(We n)97 447.6 T .546 -.25(ow d).8 H -2.15
-.25(ev e).25 H .046(lop a topological sorting program based on the algorithm \
described on page 262 of).25 F/F4 10/Times-Italic@0 SF(Fun-)2.547 E .234
(damental Algorithms)72 459.6 R F0(.)A/F5 7/Times-Roman@0 SF(12)158.904 455.5 Q
F0 .233(The reader may wish to compare this program with the)168.638 459.6 R F2
(SNOBOL4)2.733 E F0 .233(program based on)2.733 F
(the same algorithm that appears on pages 221-222 of)72 471.6 Q F4(The)2.5 E/F6
8/Times-Italic@0 SF(SNOBOL4)2.5 E F4(Pr)2.5 E -.1(og)-.45 G -.15(ra).1 G
(mming Langua).15 E -.1(ge)-.1 G F0(.).1 E .618(The input is a set of pairs of\
 objects, where the \214rst object in each pair is considered to precede the)97
487.2 R 2.935(second. The)72 499.2 R .435(output is a list of objects in a seq\
uence that meets all the constraints implied by the input.)2.935 F(In)5.435 E
(other w)72 511.2 Q
(ords, the program generates a total ordering that includes a gi)-.1 E -.15(ve)
-.25 G 2.5(np).15 G(artial ordering.)368.94 511.2 Q
(If the input contains a loop, the program will detect this f)97 526.8 Q
(act and complain.)-.1 E -.15(Fo)97 542.4 S 2.5(re).15 G(xample, gi)117.53
542.4 Q -.15(ve)-.25 G 2.5(nt).15 G(he follo)179.07 542.4 Q(wing input:)-.25 E
EP
%%Page: 15 15
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-15-)279.67 48 Q/F1 10/Courier@0 SF(letters alphanum)
108 84 Q(numbers alphanum)108 96 Q(blanks optblanks)108 108 Q(numbers real)108
120 Q(numbers integer)108 132 Q(letters variable)108 144 Q(alphanum variable)
108 156 Q(binary binaryop)108 168 Q(blanks binaryop)108 180 Q
(unqalphabet dliteral)108 192 Q(unqalphabet sliteral)108 204 Q
(sliteral literal)108 216 Q(dliteral literal)108 228 Q(integer literal)108 240
Q(real literal)108 252 Q F0(the program will produce the follo)72 270 Q
(wing output:)-.25 E F1(letters)108 288 Q(numbers)108 300 Q(blanks)108 312 Q
(binary)108 324 Q(unqalphabet)108 336 Q(alphanum)108 348 Q(real)108 360 Q
(integer)108 372 Q(optblanks)108 384 Q(binaryop)108 396 Q(dliteral)108 408 Q
(sliteral)108 420 Q(variable)108 432 Q(literal)108 444 Q F0 .147
(The basic strate)97 465.6 R .147
(gy of the program is simple: for each object, we remember ho)-.15 F 2.648(wm)
-.25 G(an)426.094 465.6 Q 2.648(yi)-.15 G .148(mmediate pre-)445.812 465.6 R
.474(decessors it has, and store a list of all its immediate successors.)72
477.6 R .473(When we ha)5.473 F .773 -.15(ve \214)-.2 H .473
(nished reading the input,).15 F 1.731
(we can immediately output the objects that ha)72 489.6 R 2.031 -.15(ve n)-.2 H
4.231(op).15 G 4.231(redecessors. Each)300.259 489.6 R 1.732
(time we output an object, we)4.231 F(remo)72 501.6 Q .572 -.15(ve i)-.15 H
2.772(tf).15 G .272(rom the data structure and decrement the predecessor count\
 of each of its immediate successors.)116.124 501.6 R 1.613 -.8(We w)97 517.2 T
.013(ill e).8 F -.15(ve)-.25 G .013
(ntually reach a state in which we run out of objects without predecessors.).15
F .014(When that hap-)5.014 F(pens, we are done.)72 529.2 Q(If an)5 E 2.5(yo)
-.15 G(bjects remain, the)182.09 529.2 Q 2.5(yf)-.15 G(orm a loop.)263.59 529.2
Q 1.614 -.8(To r)97 544.8 T .014
(educe the time spent searching for objects without predecessors, we k).8 F
.013(eep a queue of such objects.)-.1 F 1.901 -.8(We m)72 556.8 T .301
(ust also k).8 F .302(eep a queue of the successors of each object.)-.1 F .302
(In both cases, we could use a stack instead of)5.302 F 2.7(aq)72 568.8 S .2
(ueue, b)84.14 568.8 R .2(ut using a queue tends to f)-.2 F -.2(avo)-.1 G 2.7
(rt).2 G .199(he order in which objects appeared in the input, which mak)241.96
568.8 R .199(es the)-.1 F(output more intuiti)72 580.8 Q -.15(ve)-.25 G
(ly useful.).15 E 2.183(The follo)97 596.4 R 2.183
(wing structure declarations and subroutines manipulate queues.)-.25 F 4.684
(Aq)7.183 G 2.184(ueue consists of a)426.628 596.4 R .243(header \(of type)72
608.4 R F1(queue)2.743 E F0 2.743(\)w)C .243
(hich points to the \214rst and last elements of a singly-link)179.052 608.4 R
.242(ed list of queue elements)-.1 F(\(of type)72 620.4 Q F1(qel)2.5 E F0(\).)A
EP
%%Page: 16 16
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-16-)279.67 48 Q/F1 10/Courier@0 SF
(struct queue {head, tail})108 84 Q(struct qel {obj, link})108 96 Q
(procedure enqueue \(q, x\) y {)108 120 Q(if \(head\(q\) :: ""\))133 132 Q
(head\(q\) = tail\(q\) = qel\(x\))158 144 Q(else {)133 156 Q 6(y=q)158 168 S
(el\(x\))188 168 Q(link\(tail\(q\)\) = y)158 180 Q(tail\(q\) = y)158 192 Q(})
133 204 Q(})108 216 Q(procedure dequeue \(q\) x {)108 240 Q
(if \(head\(q\) :: ""\))133 252 Q(freturn)158 264 Q 6(x=h)133 276 S(ead\(q\))
163 276 Q(if \(\(head\(q\) = link\(x\)\) :: ""\))133 288 Q(tail\(q\) = "")158
300 Q(return obj\(x\))133 312 Q(})108 324 Q F0 .498(By con)97 345.6 R -.15(ve)
-.4 G .498(ntion, we use the null string to indicate the end of a list.).15 F
.499(This is con)5.499 F -.15(ve)-.4 G .499(nient because unini-).15 F .498
(tialized v)72 357.6 R .498(ariables and structure \214elds and missing ar)-.25
F .498(guments are automatically set to the null string.)-.18 F(Thus,)5.498 E
(the test)72 369.6 Q F1(head\(q\) :: "")108 387.6 Q F0(is a con)72 405.6 Q -.15
(ve)-.4 G(nient w).15 E(ay of testing whether)-.1 E F1(head\(q\))2.5 E F0
(has been set or not.)2.5 E 1.807 -.8(We r)97 421.2 T .207
(epresent each object as a structure containing the object').8 F 2.707(sn)-.55
G .207(ame \(so we can print it\), the count of)354.87 421.2 R
(immediate predecessors, and the queue of successors:)72 433.2 Q F1
(struct object {name, count, suc})108 451.2 Q F0 .784(Since we will be reading\
 the names of objects rather than the objects directly)97 472.8 R 3.284(,w)-.65
G 3.284(ew)426.986 472.8 S .783(ill need to map)441.93 472.8 R .701
(names to objects.)72 484.8 R .701(This can easily be done with a table and a \
mapping subroutine that creates elements in)5.701 F(the table as needed:)72
496.8 Q F1(namemap = TABLE\(\))108 514.8 Q(objects = queue\(\))108 526.8 Q
(procedure getobj \(name\) {)108 550.8 Q
(if \(\(getobj = namemap[name]\) :: ""\) {)133 562.8 Q
(getobj = namemap[name] = object \(name, 0, queue\(\)\))158 574.8 Q
(enqueue \(objects, getobj\))158 586.8 Q(nobj = nobj + 1)158 598.8 Q(})133
610.8 Q(})108 622.8 Q F0 1.081
(This procedure uses the feature that if no return v)97 644.4 R 1.081
(alue is e)-.25 F 1.081(xplicitly gi)-.15 F -.15(ve)-.25 G 1.081(n, the v).15 F
1.081(alue of the v)-.25 F(ariable)-.25 E .4
(with the same name as the procedure is used.)72 656.4 R .4
(If an appropriate table element already e)5.4 F .4(xists, the)-.15 F F1(::)2.9
E F0(opera-)2.9 E .27(tor will f)72 668.4 R .27(ail and the v)-.1 F .27
(alue of)-.25 F F1(getobj)2.77 E F0 .27(will be the v)2.77 F .27(alue retrie)
-.25 F -.15(ve)-.25 G 2.77(df).15 G .27(rom the table.)337.41 668.4 R .27
(As a side ef)5.27 F .27(fect, we main-)-.25 F(tain a global queue of all kno)
72 680.4 Q(wn objects in)-.25 E F1(objects)2.5 E F0(and count them in)2.5 E F1
(nobj)2.5 E F0(.)A(No)97 696 Q 2.701(wt)-.25 G .202
(hat we can map from names to objects, it is an easy matter to enter a ne)
121.671 696 R 2.702(wr)-.25 G .202(elation into our data)423.124 696 R 2.5
(structure. Procedure)72 708 R F1(enter)2.5 E F0(tak)2.5 E(es the names of tw)
-.1 E 2.5(oo)-.1 G(bjects:)288.98 708 Q EP
%%Page: 17 17
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-17-)279.67 48 Q/F1 10/Courier@0 SF
(procedure enter \(p, q\) {)108 84 Q 6(p=g)133 96 S(etobj \(p\))163 96 Q 6(q=g)
133 108 S(etobj \(q\))163 108 Q(count\(q\) = count\(q\) + 1)133 120 Q
(enqueue \(suc\(p\), q\))133 132 Q(})108 144 Q F0 1.7 -.8(We \214)97 165.6 T .1
(rst locate the objects to which).8 F F1(p)2.6 E F0(and)2.6 E F1(q)2.6 E F0
(refer)2.6 E 2.6(,c)-.4 G .1(reating them if necessary)302.74 165.6 R 5.1(.S)
-.65 G(ince)415.8 165.6 Q F1(p)2.6 E F0(precedes)2.6 E F1(q)2.6 E F0 2.6(,w)C
(e)499.56 165.6 Q(increment the predecessor count of)72 177.6 Q F1(q)2.5 E F0
(and append)2.5 E F1(q)2.5 E F0(to the successor list of)2.5 E F1(p)2.5 E F0(.)
A(Building the data structure is no)97 193.2 Q 2.5(wj)-.25 G
(ust a matter of scanning the input \214le:)237.3 193.2 Q F1
(while \(line = INPUT\) {)108 211.2 Q
(if \(line ? FENCE && BREAK\(' '\).p && SPAN\(' '\) && rem.q\))133 223.2 Q
(enter \(p, q\))158 235.2 Q(else)133 247.2 Q
(TERMINAL = "bad input line: " && line)158 259.2 Q(})108 271.2 Q F0 .204
(The pattern match assumes that e)97 292.8 R -.15(ve)-.25 G .205
(rything up to the \214rst blank in the input line is the \214rst object in a)
.15 F .152(relation, and e)72 304.8 R -.15(ve)-.25 G .151
(rything after the \214rst blank is the second object.).15 F .151
(If the match f)5.151 F .151(ails, the program complains.)-.1 F 1.048(Once all\
 the input has been read, we must initialize the queue of minimal objects \(ob\
jects without)97 320.4 R 2.951(predecessors\). This)72 332.4 R -.1(wa)2.951 G
2.951(st).1 G .451(he reason for k)176.283 332.4 R .451
(eeping a queue of all objects, which is no)-.1 F 2.95(wd)-.25 G(estro)421.01
332.4 Q .45(yed to b)-.1 F .45(uild the)-.2 F .679(queue of minimal objects.)72
344.4 R .679(It is not necessary to destro)5.679 F 3.179(yt)-.1 G .679
(he queue, b)306.999 344.4 R .679(ut it is more con)-.2 F -.15(ve)-.4 G .679
(nient because it is).15 F(then possible to use)72 356.4 Q F1(dequeue)2.5 E F0
(:)A F1(zeroes = queue\(\))108 374.4 Q(while \(x = dequeue \(objects\)\))108
398.4 Q(if \(count \(x\) == 0\))133 410.4 Q(enqueue \(zeroes, x\))158 422.4 Q
F0 .439(As long as there is a minimal object, we can print its name, delete it\
, and decrement the predecessor)97 444 R(count of each of its successors.)72
456 Q(If we decrement a predecessor count to zero, that object is no)5 E 2.5
(wm)-.25 G(inimal.)463.04 456 Q F1(while \(x = dequeue \(zeroes\)\) {)108 474 Q
(nobj = nobj - 1)133 486 Q(OUTPUT = name\(x\))133 498 Q
(while \(y = dequeue \(suc \(x\)\)\) {)133 510 Q
(if \(\(count\(y\) = count\(y\) - 1\) == 0\))158 522 Q(enqueue \(zeroes, y\))
183 534 Q(})133 546 Q(})108 558 Q F0 .572
(This loop runs until there are no more minimal objects.)97 579.6 R .573
(If there are still elements remaining \()5.573 F F1(nobj)A F0
(is nonzero\), then those elements form a loop.)72 591.6 Q F1(if \(nobj != 0\))
108 609.6 Q(TERMINAL = "The ordering contains a loop.")133 621.6 Q/F2 10
/Times-Bold@0 SF(Refer)72 651.6 Q(ences)-.18 E(Refer)72 679.2 Q(ences)-.18 E F0
15(1. R.)72 694.8 R .382(E. Grisw)2.882 F .382(old, J. F)-.1 F 2.882(.P)-.8 G
.381(oage, and I. P)188.02 694.8 R 2.881(.P)-1.11 G(olonsk)253.704 694.8 Q -.65
(y,)-.15 G/F3 10/Times-Italic@0 SF .381(The SNOBOL4 Pr)3.531 F -.1(og)-.45 G
-.15(ra).1 G .381(mming Langua).15 F .581 -.1(ge \()-.1 H .381(second edi-).1 F
(tion\),)97 706.8 Q F0(Prentice-Hall, Engle)2.5 E -.1(wo)-.25 G(od Clif).1 E
(fs, Ne)-.25 E 2.5(wJ)-.25 G(erse)279.46 706.8 Q 2.5(y\()-.15 G(1971\).)306.24
706.8 Q EP
%%Page: 18 18
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF(-18-)279.67 48 Q 15(2. R.)72 84 R 1.551(E. Grisw)4.051
F(old,)-.1 E/F1 10/Times-Italic@0 SF 1.552(String and List Pr)4.051 F 1.552
(ocessing in SNOBOL4; T)-.45 F(ec)-.92 E 1.552(hniques and Applications,)-.15 F
F0(Prentice-)4.052 E(Hall, Engle)97 96 Q -.1(wo)-.25 G(od Clif).1 E(fs, Ne)-.25
E 2.5(wJ)-.25 G(erse)219.47 96 Q 2.5(y\()-.15 G(1975\).)246.25 96 Q 15(3. J.)72
111.6 R 1.6 -.8(F. G)2.5 H(impel,).8 E F1(Algorithms in SNOBOL4,)2.5 E F0
(John W)2.5 E(ile)-.4 E 2.5(ya)-.15 G(nd Sons, Ne)307.88 111.6 Q 2.5(wY)-.25 G
(ork, Ne)372.08 111.6 Q 2.5(wY)-.25 G(ork \(1976\).)417.66 111.6 Q 15(4. B.)72
127.2 R 2.328 -.92(W. K)2.988 H .488(ernighan, \231RA).67 F .488
(TFOR -- A Preprocessor for a Rational F)-1.11 F(ortran,)-.15 E<9a>-.7 E F1
(Softwar)2.988 E 2.988(eP)-.37 G -.15(ra)432.636 127.2 S .487(ctice & Experi-)
.15 F(ence)97 139.2 Q(,)-.1 E F0(5, 4, pp. 395-406 \(October)2.5 E 2.5(,1)-.4 G
(975\).)236.19 139.2 Q 15(5. Stuart)72 154.8 R .028
(I. Feldman, \231The Programming Language EFL,)2.527 F 2.528<9a43>-.7 G .028
(omp. Sci. T)327.024 154.8 R .028(ech. Rep. No. 78, Bell Laborato-)-.7 F
(ries, Murray Hill, NJ \(June 1979\).)97 166.8 Q 15(6. Da)72 182.4 R .781
(vid R. Hanson, \231RA)-.2 F .781(TSNO \255 An Experiment in Softw)-1.11 F .781
(are Adaptability)-.1 F -.7<2c9a>-.65 G F1(Softwar)3.981 E 3.28(e\255P)-.37 G
-.15(ra)458.1 182.4 S .78(ctice and).15 F(Experience)97 194.4 Q(,)-.1 E F0
(7, pp. 625-630 \(1977\).)2.5 E 15(7. R.)72 210 R .044(E. Grisw)2.544 F .044
(old, \231Reb)-.1 F .044(us \255 a SNOBOL4/Icon Hybrid,)-.2 F 2.544<9a54>-.7 G
.045(echnical report TR 84-9, Department of Com-)319.602 210 R
(puter Science, T)97 222 Q(ucson, Arizona.)-.45 E 15(8. R.)72 237.6 R 2.019
(E. Grisw)4.519 F(old,)-.1 E F1 2.018(The Icon Pr)4.518 F -.1(og)-.45 G -.15
(ra).1 G 2.018(mming Langua).15 F -.1(ge,)-.1 G F0 2.018(Prentice-Hall, Engle)
4.618 F -.1(wo)-.25 G 2.018(od Clif).1 F 2.018(fs, Ne)-.25 F 4.518(wJ)-.25 G
(erse)483.05 237.6 Q(y)-.15 E(\(1983\).)97 249.6 Q 15(9. Robert)72 265.2 R .108
(B. K. De)2.608 F -.1(wa)-.25 G 2.608(ra).1 G .108(nd A. P)184.282 265.2 R
2.608(.M)-1.11 G .108(cCann, \231Macro Spitbol \255 a)227.666 265.2 R/F2 8
/Times-Roman@0 SF(SNOBOL4)2.608 E F0(Compiler)2.608 E -.7<2c9a>-.4 G F1
(Softwar)3.308 E 2.609(e\255P)-.37 G -.15(ra)476.38 265.2 S(ctice).15 E
(and Experience)97 277.2 Q(,)-.1 E F0(7, pp. 95-113 \(1977\).)2.5 E 10(10. S.)
72 292.8 R .182(R. Bourne, \231U)2.682 F F2(NIX)A F0 -.35(Ti)2.682 G .182
(me-Sharing System: The U).35 F F2(NIX)A F0(Shell,)2.682 E<9a>-.7 E F1 .182
(Bell Sys. T)2.682 F(ec)-.92 E .182(h. J)-.15 F(.,)-.25 E F0 .181
(57, 6, pp. 1971-1990)2.681 F(\(1978\).)97 304.8 Q 10(11. D.)72 320.4 R 1.296
(M. Ritchie and K. Thompson, \231The U)3.796 F F2(NIX)A F0 -.35(Ti)3.796 G
1.297(me-Sharing System,).35 F<9a>-.7 E F1 1.297(Bell Sys. T)3.797 F(ec)-.92 E
1.297(h. J)-.15 F(.,)-.25 E F0 1.297(57, 6, pp.)3.797 F
(1905-1929 \(1978\). Also in)97 332.4 Q F1(Comm. A)2.5 E(CM)-.3 E F0(,)A/F3 10
/Times-Bold@0 SF(17)2.5 E F0 2.5(,p)C(p. 365-375 \(1974\).)283.08 332.4 Q 10
(12. Donald)72 348 R .863(E. Knuth,)3.363 F F1 .863(Fundamental Algorithms,)
3.363 F F0(Addison-W)3.362 E(esle)-.8 E 3.362(y\()-.15 G .862(1973\). V)352.596
348 R .862(olume 1 of)-1.29 F F1 .862(The Art of Com-)3.362 F(puter Pr)97 360 Q
-.1(og)-.45 G -.15(ra).1 G(mming).15 E F0(.)A EP
%%Trailer
end
%%EOF
