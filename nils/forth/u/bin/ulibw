:2s'( a b c d -- c d a b : swap tuples )
:2eq'( a b c d -- a=c and b=d : compare tuples )
:2o'( a b c d -- a b c d a b : copy second tuple )
:abs'( a -- |a| : absolute value )
:copy'( <n1>...<nM><M> -- <n1>...<nM><n1>...<nM> : copy objs )
:fac'( a -- a! : factorial )
:in'( a b c -- b<=a<=c : range check )
:max'( a b -- a if a>b else b : maximum )
:min'( a b -- a if a<b else b : minimum )
:pow'( a b -- a^b : power )
:rnd'( a -- random x in 0..a-1 : PRNG )
:align'( align h at word boundary )
:tbl'( create table, i.e. 'vNAME_tblSIZEa )
:bl'( print blank )
:bls'( n -- <> : print n blanks )
:nl'( print newline )
:getl'( buf len -- size : get line )
:pad'( len max -- <> : print max-len padding blanks )
:pfn'( n len -- <> : print formatted number )
:pfs'( a n len -- <> : print formatted string )
:cnum'( c -- <01> : char numeric? )
:clower'( c -- <01> : char lower case? )
:cupper'( c -- <01> : char upper case? )
:calpha'( c -- <01> : char alphabetic? )
:calnum'( c -- <01> : char alpha-numeric? )
:clowc'( c1 -- c2 : convert to lower case )
:cupc'( c1 -- c2 : convert to upper case )
:rbs'( s1 c -- n | -1 : reverse BS [block scan] )
:seql'( a1 n1 a2 n2 -- <01> : strings equal? )
:smap'( s f -- s : map x over s_i )
:smem'( c s -- <01> : string member? )
:snext'( a n -- a+1 n-1 : advance to next char )
:sprev'( a n -- a-1 n+1 : back up to prev. char )
:srev'( s -- s : reverse string )
:ssave'( s1 -- s2 : save string )
:sskipw'( a n -- a+x n-x : skip white space in string )
:sskipto'( a n c -- a+x n-x : skip to char in string )
:suntrail'( a n -- a n-x : remove trailing blanks from string )
:sxlate'( a n c1 c2 -- a n : substitute chars )
:sfind'( sfind s1 s2 -- s3 1 | 0 : find string )
:srfind'( srfind s1 s2 -- s3 1 | 0 : find rightmost string )
:scopy'( a1 n a2 -- a2 n : copy string from a1 to a2 )
:sappnd'( s1 s2 -- s3 : append string s2 to s1 )
:ston'( a n -- n : convert string to natural number )
:stoi'( a n -- n : convert string to integer )
:ntos'( n a -- a n : convert natural number to string )
:itos'( n a -- a n : convert integer to string )
:s'( print stack )
:pr8'( x -- print byte in hex )
:pr16'( x -- print word in hex )
:pr32'( x -- print long word in hex )
:pr64'( x -- print long long word in hex )
:dump'( addr len -- dump memory region )
:wkup'( c -- <01> : up arrow key? )
:wkdn'( c -- <01> : down arrow key? )
:wkle'( c -- <01> : left arrow key? )
:wkri'( c -- <01> : right arrow key? )
:wkpp'( c -- <01> : prev. page key? )
:wknp'( c -- <01> : next page key? )
:wkbs'( c -- <01> : backspace key? )
:wkesc'( c -- <01> : escape key? )
:sqrt'( n -- sqrt(n) : integer square root )
