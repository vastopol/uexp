:up'( p -- d : move up )
:down'( p -- d : move down )
:right'( p -- d : move right )
:left'( p -- d : move left )
:setdir'( p -- p : set new direction )
:move1'( p -- p : move and register direction in map )
:dest'( p -- a : destination of next move )
:move'( p -- p : perform move if possible )
:rand'( -- n : get random direction via LFR )
:backup'( p -- p : backtrack to previous position )
:corr'( p -- p : draw a continuous corridor )
:genmaze'( -- : generate [note necessarily solvable] maze )
:pos0'( -- a : starting cell address )
:posn'( -- a : destination cell address )
:reset'( -- : reset parameters )
:solvable'( -- f : is this maze solvable? )
:maze'( -- : generate a solvable maze )
:next'( -- : emit newline at end of row )
:print'( -- : print maze )
:setup'( -- : setup parameters and check size )
:adjust'( n1 -- n2 : make sure a number is odd and >=5 )
:narg'( -- n : number of command line args )
:getno'( n -- : extract maze number argument )
:getgeom'( n -- : extract maze geometry arguments )
:opt0'( -- : no args? fine. )
:opt1'( -- : one arg - get maze no )
:opt2'( -- : two args - get geometry )
:opt3'( -- : three args - get maze no and geometry )
:usage'( -- : print usage and quit )
:seed'( -- : generate new PRNG seed )
