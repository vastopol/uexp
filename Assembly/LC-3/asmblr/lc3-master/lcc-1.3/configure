#!/bin/sh

#
# Parse the arguments...

INSTALL_DIR=`pwd`/install
INSTALL_POST_CMD=''
TOP_DIR=`pwd`
BASE_DIR=${BASE_DIR=$TOP_DIR}
PATH_SEP=${PATH_SEP=/}

for opt ; do
case $opt in 
	--installdir) 
	    INSTALL_DIR=$2 
	    ;;
	--no-cygwin) 
	    PATH_SEP='\\\\'
	    EXTRA_FLAGS=-mno-cygwin
	    BASE_DIR='C:\\\\lc3'
	    INSTALL_DIR=${BASE_DIR}${PATH_SEP}
	    INSTALL_POST_CMD='CACLS C:\\\\lc3 /G Users:C /C /E /T'
	    ;;    
	--basedir) 
	    BASE_DIR=$2 
	    INSTALL_DIR=${2}${PATH_SEP}
	    ;;
	--help)
	    echo "--no-cygwin <everything will be compiled without cygwin1.dll; windows paths will be used ('C:\\\\lc3')>"
	    echo "--installdir <binary installation directory> (libraries stay at source location)"
	    echo "--basedir <base installation directory> (binaries go to BASE/bin, libraries go to BASE/lc3lib)"
	    echo "--help"
	    exit
	    ;;
esac
	shift ;
done



# Some binaries that we'll need, and the places that we might find them.

binlist="uname gcc rm cp mkdir chmod sed make ranlib ar"
pathlist="/bin /usr/bin /usr/local/bin /usr/ccs/bin"
libpathlist="/lib /usr/lib /usr/local/lib"
incpathlist="/include /usr/include /usr/local/include"


# Find the binaries (or die trying).

for binary in $binlist ; do
    for path in $pathlist ; do
	if [ -r $path/$binary ] ; then
	    eval "$binary=${path}/${binary}" ;
	    break ;
	fi ;
    done ;
    eval "if [ -z \"\$$binary\" ] ; then echo \"Cannot locate $binary binary.\" ; exit ; fi"
done


# These default values are overridden below for some operating systems.

EXE=""
DYN="so"

# Tailor the variables based on OS.

case `$uname -s` in
	CYGWIN*) 
		EXE=".exe"
		DYN="dll"
		echo "Configuring for Cygwin..."
		;;
	Linux*) echo "Configuring for Linux..."
		OS_SIM_LIBS="-lcurses"
		;;
	SunOS*)  echo "Configuring for Solaris..."
		OS_SIM_LIBS="-lcurses -lsocket -lnsl"
		;;
esac
echo "Installation directory is $INSTALL_DIR"


# Splice it all in to the various Makefile.defs to create the Makefiles.

# ./src
for d in . src cpp lib lburg etc lc3pp
do
(	cd $d
	rm -f Makefile
	sed -e "s __GCC__ $gcc g" -e "s __EXE__ $EXE g"     \
	    -e "s __RM__ $rm g" -e "s __RANLIB__ $ranlib g" -e "s __AR__ $ar g" \
	    -e "s __CP__ $cp g" -e "s __MKDIR__ $mkdir g" -e "s __CHMOD__ $chmod g" \
	    -e "s*__INSTALL_DIR__*$INSTALL_DIR*g" -e "s*__TOP_DIR__*$TOP_DIR*g" \
	    -e "s*__PATH_SEP__*$PATH_SEP*g" -e "s*__BASE_DIR__*$BASE_DIR*g" -e "s*__EXTRA_FLAGS__*$EXTRA_FLAGS*g" \
	    -e "s*__INSTALL_POST_CMD__*$INSTALL_POST_CMD*g" \
	    -e "s __MAKE__ $make g" -e "s __SED__ $sed g" Makefile.def > Makefile
)
done 

